<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome</title>
    <url>/2020/12/11/hello-world/</url>
    <content><![CDATA[<p>欢迎来到菜鸡 <font color=0xaaaaaa>crystal302</font> 的博客。</p>
<p>玩的开心。</p>
]]></content>
  </entry>
  <entry>
    <title>模板</title>
    <url>/2020/12/25/template/</url>
    <content><![CDATA[<p>占坑</p>
<a id="more"></a>
<p>Todo List（难度从低到高排序）</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3367">P3367 【模板】并查集</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1226">P1226 【模板】快速幂||取余运算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3383">P3383 【模板】线性筛素数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3371">P3371 【模板】单源最短路径（弱化版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3366">P3366 【模板】最小生成树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3378">P3378 【模板】堆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3370">P3370 【模板】字符串哈希</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3382">P3382 【模板】三分法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3374">P3374 【模板】树状数组 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3811">P3811 【模板】乘法逆元</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3372">P3372 【模板】线段树 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3375">P3375 【模板】KMP字符串匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3385">P3385 【模板】负环</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1939">P1939 【模板】矩阵加速（数列）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3865">P3865 【模板】ST表</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3390">P3390 【模板】矩阵快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4549">P4549 【模板】裴蜀定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5788">P5788 【模板】单调栈</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4779">P4779 【模板】单源最短路径（标准版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/UVA210">UVA210 并行程序模拟 Concurrency Simulator</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5431">P5431 【模板】乘法逆元2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5367">P5367 【模板】康托展开</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5960">P5960 【模板】差分约束算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2613">P2613 【模板】有理数取余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3387">P3387 【模板】缩点</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2197">P2197 【模板】nim游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3373">P3373 【模板】线段树 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5905">P5905 【模板】Johnson 全源最短路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1439">P1439 【模板】最长公共子序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3386">P3386 【模板】二分图最大匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3388">P3388 【模板】割点（割顶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5656">P5656 【模板】二元一次不定方程(exgcd)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3381">P3381 【模板】最小费用最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1886">P1886 滑动窗口 /【模板】单调队列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3377">P3377 【模板】左偏树（可并堆）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4781">P4781 【模板】拉格朗日插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5854">P5854 【模板】笛卡尔树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5903">P5903 【模板】树上 k 级祖先</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6091">P6091 【模板】原根</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1368">P1368 【模板】最小表示法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5632">P5632 【模板】Stoer-Wagner算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6086">P6086 【模板】Prufer 序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3805">P3805 【模板】manacher算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5490">P5490 【模板】扫描线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4783">P4783 【模板】矩阵求逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2742">P2742 [USACO5.1]圈奶牛Fencing the Cows /【模板】二维凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3389">P3389 【模板】高斯消元法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1495">P1495 【模板】中国剩余定理(CRT)/曹冲养猪</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3796">P3796 【模板】AC自动机（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3808">P3808 【模板】AC自动机（简单版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5826">P5826 【模板】子序列自动机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3846">P3846 [TJOI2007] 可爱的质数/【模板】BSGS</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5091">P5091 【模板】扩展欧拉定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3384">P3384 【模板】轻重链剖分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3391">P3391 【模板】文艺平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3807">P3807 【模板】卢卡斯定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3376">P3376 【模板】网络最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3812">P3812 【模板】线性基</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3919">P3919 【模板】可持久化线段树 1（可持久化数组）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P7112">P7112 【模板】行列式求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3834">P3834 【模板】可持久化线段树 2（主席树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1919">P1919 【模板】A*B Problem升级版（FFT快速傅里叶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4525">P4525 【模板】自适应辛普森法1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1452">P1452 [USACO03FALL]Beauty Contest G /【模板】旋转卡壳</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3809">P3809 【模板】后缀排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4782">P4782 【模板】2-SAT 问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5055">P5055 【模板】可持久化文艺平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5236">P5236 【模板】静态仙人掌</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5357">P5357 【模板】AC自动机（二次加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5394">P5394 【模板】下降幂多项式乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5496">P5496 【模板】回文自动机（PAM）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5494">P5494 【模板】线段树分裂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5906">P5906 【模板】回滚莫队&amp;不删除莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6114">P6114 【模板】Lyndon 分解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6136">P6136 【模板】普通平衡树（数据加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6177">P6177 Count on a tree II/【模板】树分块</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4196">P4196 [CQOI2006]凸多边形 /【模板】半平面交</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4719">P4719 【模板】”动态 DP”&amp;动态树分治</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4213">P4213 【模板】杜教筛（Sum）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5043">P5043 【模板】树同构（[BJOI2015]树的同构）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6329">P6329 【模板】点分树 | 震波</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5491">P5491 【模板】二次剩余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6139">P6139 【模板】广义后缀自动机（广义 SAM）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4717">P4717 【模板】快速莫比乌斯/沃尔什变换 (FMT/FWT)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3804">P3804 【模板】后缀自动机 (SAM)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4929">P4929 【模板】舞蹈链（DLX）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6113">P6113 【模板】一般图最大匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4526">P4526 【模板】自适应辛普森法2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4777">P4777 【模板】扩展中国剩余定理（EXCRT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4716">P4716 【模板】最小树形图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4718">P4718 【模板】Pollard-Rho算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4725">P4725 【模板】多项式对数函数（多项式 ln）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5787">P5787 二分图 /【模板】线段树分治</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4195">P4195 【模板】扩展BSGS</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3835">P3835 【模板】可持久化平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6097">P6097 【模板】子集卷积</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6242">P6242 【模板】线段树 3</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6178">P6178 【模板】Matrix-Tree 定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6164">P6164 【模板】后缀平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3806">P3806 【模板】点分治1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3690">P3690 【模板】Link Cut Tree （动态树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5410">P5410 【模板】扩展 KMP（Z 函数）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6192">P6192 【模板】最小斯坦纳树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4751">P4751 【模板】”动态DP”&amp;动态树分治（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4721">P4721 【模板】分治 FFT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5829">P5829 【模板】失配树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4720">P4720 【模板】扩展卢卡斯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4722">P4722 【模板】最大流 加强版 / 预流推进</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3380">P3380 【模板】二逼平衡树（树套树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4245">P4245 【模板】任意模数多项式乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5245">P5245 【模板】多项式快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4238">P4238 【模板】多项式乘法逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4897">P4897 【模板】最小割树（Gomory-Hu Tree）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4980">P4980 【模板】Pólya 定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6657">P6657 【模板】LGV 引理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5205">P5205 【模板】多项式开根</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5277">P5277 【模板】多项式开根（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5273">P5273 【模板】多项式幂函数 (加强版)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4726">P4726 【模板】多项式指数函数（多项式 exp）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6577">P6577 【模板】二分图最大权完美匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4556">P4556 [Vani有约会]雨天的尾巴 /【模板】线段树合并</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5192">P5192 Zoj3229 Shoot the Bullet|东方文花帖|【模板】有源汇上下界最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6800">P6800 【模板】Chirp Z-Transform</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4724">P4724 【模板】三维凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5180">P5180 【模板】支配树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2483">P2483 【模板】k短路 / [SDOI2010]魔法猪学院</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4723">P4723 【模板】常系数齐次线性递推</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5247">P5247 【模板】动态图完全连通性</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5282">P5282 【模板】快速阶乘算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5325">P5325 【模板】Min_25筛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5050">P5050 【模板】多项式多点求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5809">P5809 【模板】多项式复合逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4512">P4512 【模板】多项式除法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5056">P5056 【模板】插头dp</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5373">P5373 【模板】多项式复合函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5487">P5487 【模板】Berlekamp-Massey算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5808">P5808 【模板】常系数非齐次线性递推</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5668">P5668 【模板】N次剩余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5158">P5158 【模板】多项式快速插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4887">P4887 【模板】莫队二次离线（第十四分块(前体)）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5170">P5170 【模板】类欧几里得算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6656">P6656 【模板】Runs</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6699">P6699 【模板】一般图最大权匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P6115">P6115 【模板】整式递推</a></li>
</ul>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>辅助</tag>
      </tags>
  </entry>
  <entry>
    <title>21/01/10 五校联考</title>
    <url>/2021/01/11/210110/</url>
    <content><![CDATA[<p>wreck/deck/pack</p>
<a id="more"></a>
<h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><h4 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h4><p>给定两个圆心位于 $(0,0)$ 的圆 $A,B$，半径分别为 $a,b$。现在从 $B$ 圆内随机取两个点，定义它们的距离为不经过 $A$ 圆周的最短距离（如果不存在则为 $0$）。求期望距离，精确到相对误差 $10^{-4}$。</p>
<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><p>发现是个积分，用辛普森打表（约 90KB），然后插值即可。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> fx[]=&#123;<span class="comment">/*此处省略一张 90KB 的表*/</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (x&gt;<span class="number">1</span>) x=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (x&lt;<span class="number">0</span>) x=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> y=x*<span class="number">10000</span>;</span><br><span class="line">	<span class="keyword">double</span> x0=y/<span class="number">10000.0</span>,x1=(y+<span class="number">1</span>)/<span class="number">10000.0</span>,dt=(x-x0)/(x1-x0);</span><br><span class="line">	<span class="keyword">return</span> fx[y]*(<span class="number">1</span>-dt)+fx[y+<span class="number">1</span>]*dt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;wreck.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;wreck.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> T=read();</span><br><span class="line">	<span class="keyword">while</span> (T --&gt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> n=read(),m=read();</span><br><span class="line">		<span class="keyword">double</span> x=f(n*<span class="number">1.0</span>/m)*m;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.10lf\n&quot;</span>,x);</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="B"><a href="#B" class="headerlink" title="B"></a>B</h3><h4 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h4><p>有 $n$ 张卡片，找出一个选择卡片的方式，满足 $m$ 条限制形如：</p>
<ul>
<li>$a$ 和 $b$ 不能都选</li>
<li>$a$ 和 $b$ 不能都不选</li>
<li>$[a,b]$ 只能选一个</li>
</ul>
<p>$n,m\leq 10^5$。</p>
<h4 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h4><p>显然是个 2-sat 模型，第三个操作线段树优化建图。</p>
<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="keyword">int</span> ec[N&lt;&lt;<span class="number">1</span>],ea[N&lt;&lt;<span class="number">1</span>],eb[N&lt;&lt;<span class="number">1</span>],etot,n,m,l[N],r[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	etot++;ea[etot]=y;eb[etot]=ec[x];ec[x]=etot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vec1[N],vec2[N];</span><br><span class="line"><span class="built_in">multiset</span> &lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls (k&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs (k&lt;&lt;1|1)</span></span><br><span class="line"><span class="keyword">int</span> minx[N&lt;&lt;<span class="number">2</span>],dfn[N&lt;&lt;<span class="number">1</span>],low[N&lt;&lt;<span class="number">1</span>],stk[N&lt;&lt;<span class="number">1</span>],vis[N&lt;&lt;<span class="number">1</span>],stktop,col[N&lt;&lt;<span class="number">1</span>],cntc;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">	minx[k]=min(minx[ls],minx[rs]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (l==r) minx[k]=inf;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		build(ls,l,mid);</span><br><span class="line">		build(rs,mid+<span class="number">1</span>,r);</span><br><span class="line">		pushup(k);		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (l==r) minx[k]=y;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (x&lt;=mid) modify(ls,l,mid,x,y);</span><br><span class="line">		<span class="keyword">else</span> modify(rs,mid+<span class="number">1</span>,r,x,y);</span><br><span class="line">		pushup(k);		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (l&gt;=x &amp;&amp; r&lt;=y) <span class="keyword">return</span> minx[k];</span><br><span class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,res=inf;</span><br><span class="line">	<span class="keyword">if</span> (x&lt;=mid) res=min(res,query(ls,l,mid,x,y));</span><br><span class="line">	<span class="keyword">if</span> (y&gt;mid) res=min(res,query(rs,mid+<span class="number">1</span>,r,x,y));</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paint</span><span class="params">()</span></span>&#123;</span><br><span class="line">	col[stk[stktop]]=cntc;</span><br><span class="line">	vis[stk[stktop]]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (stk[stktop]&lt;=n) modify(<span class="number">1</span>,<span class="number">1</span>,n,stk[stktop],inf);</span><br><span class="line">	stktop--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	dfn[u]=low[u]=++etot;</span><br><span class="line">	stk[++stktop]=u;vis[u]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (u&lt;=n)&#123;</span><br><span class="line">		modify(<span class="number">1</span>,<span class="number">1</span>,n,u,dfn[u]);s.erase(u);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[u];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> v=ea[i];</span><br><span class="line">		<span class="keyword">if</span> (!dfn[v])&#123;</span><br><span class="line">			tarjan(v);low[u]=min(low[u],low[v]);</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(vis[v]) low[u]=min(low[u],dfn[v]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (u&gt;n)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;::iterator it;;)&#123;</span><br><span class="line">			it=s.lower_bound(l[u-n]);</span><br><span class="line">			<span class="keyword">if</span> (it!=s.end() &amp;&amp; *it==u-n) ++it;</span><br><span class="line">			<span class="keyword">if</span> (it==s.end() || *it&gt;r[u-n]) <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">int</span> v=*it;</span><br><span class="line">			<span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">				tarjan(v);low[u]=min(low[u],low[v]);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(vis[v]) low[u]=min(low[u],dfn[v]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (l[u-n]&lt;u-n) low[u]=min(low[u],query(<span class="number">1</span>,<span class="number">1</span>,n,l[u-n],u-n<span class="number">-1</span>));</span><br><span class="line">		<span class="keyword">if</span> (u-n&lt;r[u-n]) low[u]=min(low[u],query(<span class="number">1</span>,<span class="number">1</span>,n,u-n+<span class="number">1</span>,r[u-n]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (low[u]==dfn[u])&#123;</span><br><span class="line">		cntc++;<span class="keyword">while</span> (stk[stktop]!=u) paint();paint();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;deck.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;deck.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	n=read(),m=read();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> op=read(),x=read(),y=read();</span><br><span class="line">		<span class="keyword">if</span> (op==<span class="number">1</span>) addEdge(x+n,y),addEdge(y+n,x);</span><br><span class="line">		<span class="keyword">if</span> (op==<span class="number">2</span>) addEdge(x,y+n),addEdge(y,x+n);</span><br><span class="line">		<span class="keyword">if</span> (op==<span class="number">3</span>)&#123;</span><br><span class="line">			vec1[x].push_back(x);vec1[y+<span class="number">1</span>].push_back(-x);</span><br><span class="line">			vec2[y].push_back(y);vec2[x<span class="number">-1</span>].push_back(-y);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="keyword">int</span>)vec1[i].size();++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (vec1[i][j]&gt;<span class="number">0</span>) s.insert(vec1[i][j]);</span><br><span class="line">			<span class="keyword">else</span> s.erase(s.find(-vec1[i][j]));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (s.empty()) l[i]=i;</span><br><span class="line">		<span class="keyword">else</span> l[i]=*s.begin();</span><br><span class="line">	&#125;</span><br><span class="line">	s.clear();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;--i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="keyword">int</span>)vec2[i].size();++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (vec2[i][j]&gt;<span class="number">0</span>) s.insert(vec2[i][j]);</span><br><span class="line">			<span class="keyword">else</span> s.erase(s.find(-vec2[i][j]));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (s.empty()) r[i]=i;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;::iterator it=s.end();--it;r[i]=*it;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	s.clear();<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) s.insert(i);</span><br><span class="line">	build(<span class="number">1</span>,<span class="number">1</span>,n);etot=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span> (!dfn[i+n]) tarjan(i+n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span> (!dfn[i]) tarjan(i);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span> (col[i]==col[i+n])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			fclose(<span class="built_in">stdin</span>);</span><br><span class="line">			fclose(<span class="built_in">stdout</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,(<span class="keyword">int</span>)col[i]&gt;col[i+n]);</span><br><span class="line">		<span class="keyword">if</span> (i==n) <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><h4 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h4><p>给定一个字符串 $S$，定义一个字符串 $T$ 和 $S$ k-模糊匹配，当且仅当 $|T|=|S|$ 且两个字符串第一个和最后一个不相同的位置间距 $&lt;k$。</p>
<p>给定若干个字符串，对于每个字符串求 $S$ 有多少个子串和它 k-模糊匹配。</p>
<h4 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h4><p>不会。用三 hash 硬卡过。</p>
<p>数据似乎有所加强，对于短的数据随便加一个 hashMap 防止同样的询问再被做就行了。</p>
<h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> base1=<span class="number">1000000009</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base2=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> __int128 base3=<span class="number">1000000003</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="keyword">char</span> s[N],t[N];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> hs1[N],hs3[N],pow1[N];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> hs2[N],hs4[N],pow2[N];</span><br><span class="line"><span class="keyword">unsigned</span> __int128 hs5[N],hs6[N],pow3[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equals</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> hs1[r1]-hs1[l1<span class="number">-1</span>]*pow1[r1-l1+<span class="number">1</span>]==hs3[r2]-hs3[l2<span class="number">-1</span>]*pow1[r2-l2+<span class="number">1</span>] &amp;&amp; hs2[r1]-hs2[l1<span class="number">-1</span>]*pow2[r1-l1+<span class="number">1</span>]==hs4[r2]-hs4[l2<span class="number">-1</span>]*pow2[r2-l2+<span class="number">1</span>]</span><br><span class="line">	    &amp;&amp; hs5[r1]-hs5[l1<span class="number">-1</span>]*pow3[r1-l1+<span class="number">1</span>]==hs6[r2]-hs6[l2<span class="number">-1</span>]*pow3[r2-l2+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;pack.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;pack.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> k=read();</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);<span class="keyword">int</span> slen=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">	pow1[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) pow1[i]=pow1[i<span class="number">-1</span>]*base1;</span><br><span class="line">	pow2[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) pow2[i]=pow2[i<span class="number">-1</span>]*base2; </span><br><span class="line">	pow3[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) pow3[i]=pow3[i<span class="number">-1</span>]*base3;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) hs1[i]=hs1[i<span class="number">-1</span>]*base1+s[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) hs2[i]=hs2[i<span class="number">-1</span>]*base2+s[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen;++i) hs5[i]=hs5[i<span class="number">-1</span>]*base3+s[i];</span><br><span class="line">	<span class="keyword">int</span> T=read();</span><br><span class="line">	<span class="keyword">while</span> (T --&gt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,t+<span class="number">1</span>);<span class="keyword">int</span> tlen=<span class="built_in">strlen</span>(t+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">if</span> (tlen&gt;slen) <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tlen;++i) hs3[i]=hs3[i<span class="number">-1</span>]*base1+t[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tlen;++i) hs4[i]=hs4[i<span class="number">-1</span>]*base2+t[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tlen;++i) hs6[i]=hs6[i<span class="number">-1</span>]*base3+t[i];</span><br><span class="line">			<span class="keyword">if</span> (tlen&lt;=k) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,slen-tlen+<span class="number">1</span>);</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=slen-tlen+<span class="number">1</span>;++i)&#123;</span><br><span class="line">					<span class="keyword">if</span> (equals(i,i+tlen<span class="number">-1</span>,<span class="number">1</span>,tlen)) sum++;</span><br><span class="line">					<span class="keyword">else</span>&#123;</span><br><span class="line">						<span class="keyword">int</span> lpos=<span class="number">-1</span>,rpos=<span class="number">-1</span>,l,r;</span><br><span class="line">						l=<span class="number">1</span>;r=tlen;</span><br><span class="line">						<span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">							<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">							<span class="keyword">if</span> (equals(i,i+mid<span class="number">-1</span>,<span class="number">1</span>,mid)) l=mid+<span class="number">1</span>;</span><br><span class="line">							<span class="keyword">else</span>&#123;</span><br><span class="line">								lpos=mid;r=mid<span class="number">-1</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">						l=<span class="number">1</span>;r=tlen;</span><br><span class="line">						<span class="keyword">while</span> (l&lt;=r)&#123;</span><br><span class="line">							<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">							<span class="keyword">if</span> (equals(i+mid<span class="number">-1</span>,i+tlen<span class="number">-1</span>,mid,tlen)) r=mid<span class="number">-1</span>;</span><br><span class="line">							<span class="keyword">else</span>&#123;</span><br><span class="line">								rpos=mid;l=mid+<span class="number">1</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span> (lpos==<span class="number">-1</span> || rpos==<span class="number">-1</span> || rpos-lpos&lt;k) sum++;</span><br><span class="line">					&#125; </span><br><span class="line">				&#125;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>五校联考</tag>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>ConsoleUI 5.0</title>
    <url>/2021/01/07/consoleUI5/</url>
    <content><![CDATA[<p>ConsoleUI 5 - 最新版本 v5.1.0</p>
<a id="more"></a>
<p><b><font color=green>本项目正在持续更新中。</font></b></p>
<p>ConsoleUI 5 是一个辅助控制台编程的<strong>头文件</strong>。相比于 ConsoleUI 4 更强大。</p>
<p>下载地址：</p>
<p>v5.0.0 <a href="https://zombie462.github.io/items/console_v5.0.zip">点击下载</a></p>
<p>v5.1.0 <a href="https://zombie462.github.io/items/console_v5.1.zip">点击下载</a></p>
<p><strong>README.md</strong></p>
<h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>ConsoleUI 5.0 采用的是控件模板架构，比纯基于控制台的 ConsoleUI 4.0 更高级、更人性化。</p>
<h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><h4 id="常用基本方法"><a href="#常用基本方法" class="headerlink" title="常用基本方法"></a>常用基本方法</h4><div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>showCursor</td>
<td><code>void showCursor()</code></td>
<td>显示光标</td>
</tr>
<tr>
<td>hideCursor</td>
<td><code>void hideCursor()</code></td>
<td>隐藏光标</td>
</tr>
<tr>
<td>clrscr</td>
<td><code>void clrscr()</code></td>
<td>清空屏幕</td>
</tr>
<tr>
<td>toHex</td>
<td><code>int toHex(char c)</code></td>
<td>十六进制字符（小写）转十进制</td>
</tr>
<tr>
<td>setColor</td>
<td><code>void setColor(int colorID)</code></td>
<td>修改输出字符颜色为 colorID（见附录 1）</td>
</tr>
<tr>
<td>setWindowSize</td>
<td><code>void setWindowSize(string name,int width,int height)</code></td>
<td>修改控制台窗体标题/宽/高</td>
</tr>
<tr>
<td>getxy</td>
<td><code>pair &lt;int,int&gt; getxy()</code></td>
<td>获得当前光标所在的行/列</td>
</tr>
<tr>
<td>getPos</td>
<td><code>void getpos(POINT &amp;pt)</code></td>
<td>获得当前鼠标所在的行/列（保存在 pt 中）</td>
</tr>
<tr>
<td>press</td>
<td><code>#define press(VK_NONAME) ((GetAsyncKeyState(VK_NONAME)&amp;0x8000)?1:0)</code></td>
<td>检测是否有键按下（见附录 2）</td>
</tr>
<tr>
<td>gotoxy（v5.1+）</td>
<td><code>void gotoxy(int x,int y)</code></td>
<td>修改当前光标所在的行/列</td>
</tr>
</tbody>
</table>
</div>
<h4 id="附录1-ColorID-对应表"><a href="#附录1-ColorID-对应表" class="headerlink" title="附录1 - ColorID 对应表"></a>附录1 - ColorID 对应表</h4><div class="table-container">
<table>
<thead>
<tr>
<th>ColorID</th>
<th>颜色</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>黑色/BLACK</td>
<td><strong><font color=black>0</font></strong></td>
</tr>
<tr>
<td>1</td>
<td>深蓝色/DARK BLUE</td>
<td><strong><font color=#00007f>1</font></strong></td>
</tr>
<tr>
<td>2</td>
<td>深绿色/DARK GREEN</td>
<td><strong><font color=#007f00>2</font></strong></td>
</tr>
<tr>
<td>3</td>
<td>深青色/DARK CYAN</td>
<td><strong><font color=#007f7f>3</font></strong></td>
</tr>
<tr>
<td>4</td>
<td>深红色/DARK RED</td>
<td><strong><font color=#7f0000>4</font></strong></td>
</tr>
<tr>
<td>5</td>
<td>深紫色/DARK MAGENTA</td>
<td><strong><font color=#7f007f>5</font></strong></td>
</tr>
<tr>
<td>6</td>
<td>深黄色/DARK YELLOW</td>
<td><strong><font color=#7f7f00>6</font></strong></td>
</tr>
<tr>
<td>7</td>
<td>浅灰色/GRAY</td>
<td><strong><font color=lightgray>7</font></strong></td>
</tr>
<tr>
<td>8</td>
<td>深灰色/DARK GRAY</td>
<td><strong><font color=#777777>8</font></strong></td>
</tr>
<tr>
<td>9</td>
<td>蓝色/BLUE</td>
<td><strong><font color=blue>9</font></strong></td>
</tr>
<tr>
<td>10/a</td>
<td>绿色/GREEN</td>
<td><strong><font color=green>a</font></strong></td>
</tr>
<tr>
<td>11/b</td>
<td>青色/CYAN</td>
<td><strong><font color=cyan>b</font></strong></td>
</tr>
<tr>
<td>12/c</td>
<td>红色/RED</td>
<td><strong><font color=red>c</font></strong></td>
</tr>
<tr>
<td>13/d</td>
<td>紫色/MAGENTA</td>
<td><strong><font color=magenta>d</font></strong></td>
</tr>
<tr>
<td>14/e</td>
<td>黄色/YELLOW</td>
<td><strong><font color=yellow>e</font></strong></td>
</tr>
<tr>
<td>15/f</td>
<td>白色/WHITE</td>
<td><strong><font color=white>f</font></strong></td>
</tr>
</tbody>
</table>
</div>
<p>*控制台的默认颜色是浅灰色。</p>
<p>*setColor 中一般用 colorID 十六进制的高位表示背景颜色，低位表示字符颜色。如 colorID=0xcf 表示红色背景/白色字符。</p>
<h4 id="附录-2-VK-NONAME-对应表"><a href="#附录-2-VK-NONAME-对应表" class="headerlink" title="附录 2 - VK_NONAME 对应表"></a>附录 2 - VK_NONAME 对应表</h4><div class="table-container">
<table>
<thead>
<tr>
<th>VK_NONAME</th>
<th>键位</th>
</tr>
</thead>
<tbody>
<tr>
<td>VK_LBUTTON</td>
<td>左键</td>
</tr>
<tr>
<td>VK_RBUTTON</td>
<td>右键</td>
</tr>
<tr>
<td>VK_SHIFT/VK_CTRL/VK_ALT/…</td>
<td>对应键位</td>
</tr>
<tr>
<td>‘A’/‘B’/‘C’/…</td>
<td>对应键位</td>
</tr>
</tbody>
</table>
</div>
<h4 id="RawText"><a href="#RawText" class="headerlink" title="RawText"></a>RawText</h4><p>和 ConsoleUI 4.0 一样，我们使用 RawText 类型来简便地表示带格式字符串。</p>
<p><strong>RawText 成员变量表：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td><code>string</code></td>
<td>表示带格式字符串</td>
</tr>
<tr>
<td>numBuf</td>
<td><code>vector &lt;int&gt;</code></td>
<td>表示替代 <code>%d</code> 的数字列表</td>
</tr>
<tr>
<td>strBuf</td>
<td><code>vector &lt;string&gt;</code></td>
<td>表示替代 <code>%s</code> 的字符串列表</td>
</tr>
<tr>
<td>dblBuf</td>
<td><code>vector &lt;double&gt;</code></td>
<td>表示替代 <code>%f</code> 的浮点数列表</td>
</tr>
</tbody>
</table>
</div>
<p>其中，带格式字符串，是一个一般字符串中间插入一些表示格式的字符短语（如 <code>&amp;d</code>）等，来表达修改格式的意义。</p>
<p><strong>具体地：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>简介</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>&amp;X</td>
<td>将之后字符输出的颜色变为 X</td>
<td>&amp;c 字符颜色变为红色</td>
</tr>
<tr>
<td>#X</td>
<td>将之后字符输出的背景颜色变为 X</td>
<td>#c 字符背景颜色变为红色</td>
</tr>
<tr>
<td>%X</td>
<td>从 numBuf/strBuf/dblBuf 中调出下一个元素输出</td>
<td>%d 表示从 numBuf 调出下一个元素输出</td>
</tr>
<tr>
<td>/X</td>
<td>直接输出 X 字符（用于转义）。<code>/n</code> 不适用此条规则。</td>
<td>略</td>
</tr>
<tr>
<td>/n</td>
<td>换行。且列坐标和第一个字符相等。</td>
<td>略</td>
</tr>
</tbody>
</table>
</div>
<p><strong>和它有关的方法有：</strong></p>
<p>构造函数：<code>RawText(string _text=&quot;&quot;,vector &lt;int&gt; numBuf=&#123;&#125;,vector &lt;string&gt; strBuf=&#123;&#125;,vector &lt;double&gt; dblBuf=&#123;&#125;)</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>RawText::print</td>
<td><code>void RawText::print(int backColor=0)</code></td>
<td>输出 RawText 中的内容，且默认背景颜色为 backColor</td>
</tr>
<tr>
<td>toRaw</td>
<td><code>RawText toRaw(string s)</code></td>
<td>string 转 RawText</td>
</tr>
<tr>
<td>tellraw</td>
<td><code>void tellraw(RawText s)</code></td>
<td>等价于 s.print()</td>
</tr>
<tr>
<td>tellraw</td>
<td><code>void tellraw(string s)</code></td>
<td>等价于 toRaw(s).print()</td>
</tr>
</tbody>
</table>
</div>
<h3 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h3><p>主要详解 Object 类的内容。</p>
<h4 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h4><p>所有继承于 Object 的类都有这些通用成员。</p>
<p><strong>通用成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>visible</td>
<td><code>bool</code></td>
<td>是否可见</td>
</tr>
<tr>
<td>chosen</td>
<td><code>bool</code></td>
<td>保留作 option 类</td>
</tr>
<tr>
<td>enable</td>
<td><code>bool</code></td>
<td>是否可用</td>
</tr>
<tr>
<td>xpos/ypos</td>
<td><code>int</code></td>
<td>左上角行/列坐标</td>
</tr>
<tr>
<td>faObject</td>
<td><code>Form*</code></td>
<td>父对象。详见 Form 类解释</td>
</tr>
<tr>
<td>id</td>
<td><code>OBJECT_TYPE</code></td>
<td>控件类型</td>
</tr>
</tbody>
</table>
</div>
<p>*OBJECT_TYPE</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">OBJECT_TYPE</span>&#123;</span></span><br><span class="line">	OBJECT,FORM,BUTTON,LABEL,OPTION,CHECKBOX,PROGRESS_BAR,LABEL_VAL,LIST</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>*注意：所有控件的 xpos/ypos 为关于它父对象的相对坐标。</p>
<p><strong>通用成员函数：</strong></p>
<p>构造函数：<code>Object()</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>remove</td>
<td><code>void remove()</code></td>
<td>移除控件</td>
</tr>
<tr>
<td>hide</td>
<td><code>void hide()</code></td>
<td>隐藏控件（本质上是重新打印父控件）</td>
</tr>
<tr>
<td>show</td>
<td><code>void show()</code></td>
<td>显示控件</td>
</tr>
<tr>
<td>print</td>
<td><code>virtual void print()</code></td>
<td>输出控件</td>
</tr>
</tbody>
</table>
</div>
<h4 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h4><p>Form 控件是控件的载体。任何其他控件都应该被包含在某一个 Form 里，作为它的子控件。Form 之间的嵌套关系形成一棵树。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td><code>int</code></td>
<td>控件宽度</td>
</tr>
<tr>
<td>height</td>
<td><code>int</code></td>
<td>控件高度</td>
</tr>
<tr>
<td>bgColor</td>
<td><code>int</code></td>
<td>控件背景颜色</td>
</tr>
<tr>
<td>sonObjects</td>
<td><code>vector &lt;Object*&gt;</code></td>
<td>该控件包含的子控件</td>
</tr>
</tbody>
</table>
</div>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>Form(int _xpos=0,int _ypos=0,int _width=0,int _height=0,Form* _faObject=nullptr,int _bgColor=0)</code></p>
<h4 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h4><p>按钮控件。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>bgColor</td>
<td><code>int</code></td>
<td>按钮背景颜色</td>
</tr>
<tr>
<td>bgPressColor</td>
<td><code>int</code></td>
<td>按钮被触碰（不一定点击）时背景颜色</td>
</tr>
<tr>
<td>isPress</td>
<td><code>bool</code></td>
<td>按钮是否被触碰</td>
</tr>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>按钮上显示字符</td>
</tr>
</tbody>
</table>
</div>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>Button(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,int _bgColor=0,int _bgPressColor=0)</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>preserve</td>
<td><code>int preserve()</code></td>
<td>维护按钮。如果按钮被触碰，返回 1；如果按钮被点击，返回 2；否则返回 0</td>
</tr>
</tbody>
</table>
</div>
<p>*所有的维护按钮函数只会判定一次，所以你应当使用 <code>while (1)</code> 等语句连续地判定。</p>
<h4 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h4><p>标签控件。简称文本框。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>标签上显示的字符</td>
</tr>
</tbody>
</table>
</div>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>Label(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr)</code></p>
<h4 id="Option"><a href="#Option" class="headerlink" title="Option"></a>Option</h4><p>单选框控件。同一个 Form 的直系子单选框只能有一个被选中。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>tickChar</td>
<td><code>char</code></td>
<td>选择时显示的“钩”的字符</td>
</tr>
<tr>
<td>tickColor</td>
<td><code>int</code></td>
<td>选择时显示的“钩”的颜色</td>
</tr>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>单选框显示的字符</td>
</tr>
<tr>
<td>blockChar</td>
<td><code>string</code></td>
<td>显示的框的字符类型。第一和第二个字符分别表示左/右边框</td>
</tr>
<tr>
<td>isPress</td>
<td><code>bool</code></td>
<td>单选框是否被触碰</td>
</tr>
<tr>
<td>chosen</td>
<td><code>int</code></td>
<td>单选框是否被选择</td>
</tr>
</tbody>
</table>
</div>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>Option(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,int _tickColor=10,char _tickChar=&#39;X&#39;,string _blockChar=&quot;()&quot;)</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>set</td>
<td><code>virtual void set(int tp=-1)</code></td>
<td>将选择框的状态改成 tp。如果未定义 tp，则默认翻转状态</td>
</tr>
<tr>
<td>preserve</td>
<td><code>int preserve()</code></td>
<td>同按钮的 preserve（点击时还会自动更改选择框状态）</td>
</tr>
</tbody>
</table>
</div>
<h5 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h5><p>多选框控件。同一个 Form 的直系子多选框可以有多个被选中。</p>
<p>构造函数：<code>CheckBox(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,int _tickColor=10,char _tickChar=&#39;O&#39;,string _blockChar=&quot;[]&quot;)</code></p>
<h4 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h4><p>进度条控件。可以选择绑定一个变量指针来实时反馈其与总量的关系。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td><code>int</code></td>
<td>进度条长度</td>
</tr>
<tr>
<td>barColor</td>
<td><code>int</code></td>
<td>进度条颜色</td>
</tr>
<tr>
<td>style</td>
<td><code>int</code></td>
<td>进度条风格</td>
</tr>
<tr>
<td>maxVal</td>
<td><code>int</code></td>
<td>进度条上限</td>
</tr>
<tr>
<td>value</td>
<td><code>int*</code></td>
<td>进度条绑定的变量指针</td>
</tr>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>进度条标题</td>
</tr>
</tbody>
</table>
</div>
<p>*进度条的风格是一个两位二进制整数。高位表示是否显示形如 <code>X/Y</code> 的数字，低位表示是否将进度条用中括号括起来。</p>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>ProgressBar(RawText _text,int _xpos=0,int _ypos=0,int _width=0,Form* _faObject=nullptr,int* _value=nullptr,int _maxVal=100,int _barColor=12,int _style=0)</code></p>
<p>*使用 print 函数实时更新进度条状态。</p>
<h4 id="LabelVal"><a href="#LabelVal" class="headerlink" title="LabelVal"></a>LabelVal</h4><p>带变量的标签。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>标签显示的文字</td>
</tr>
<tr>
<td>value</td>
<td><code>void**</code></td>
<td>标签绑定的变量</td>
</tr>
<tr>
<td>maxVal</td>
<td><code>int</code></td>
<td>标签显示的上限值（为 -1 则不显示）</td>
</tr>
<tr>
<td>dataType</td>
<td><code>DATA_TYPE</code></td>
<td>标签绑定的变量类型</td>
</tr>
<tr>
<td>valCol</td>
<td><code>int</code></td>
<td>标签显示的变量颜色</td>
</tr>
</tbody>
</table>
</div>
<p>*DATA_TYPE</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DATA_TYPE</span>&#123;</span></span><br><span class="line">	_INT,_DOUBLE,_STRING</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>成员函数</strong></p>
<p>构造函数：</p>
<ul>
<li><code>LabelVal(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,int* _value=nullptr,int _valCol=14,int _maxVal=-1);</code></li>
<li><code>LabelVal(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,double* _value=nullptr,int _valCol=14,int _maxVal=-1);</code></li>
<li><code>LabelVal(RawText _text,int _xpos=0,int _ypos=0,Form* _faObject=nullptr,string* _value=nullptr,int _valCol=14,int _maxVal=-1);</code></li>
</ul>
<p>*使用 print 函数实时更新标签状态。</p>
<h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><p>列表控件。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>列表的标题</td>
</tr>
<tr>
<td>items</td>
<td><code>vector &lt;RawText&gt;*</code></td>
<td>绑定的 vector 作为列表</td>
</tr>
<tr>
<td>perPage</td>
<td><code>int</code></td>
<td>单页显示的页数</td>
</tr>
<tr>
<td>width</td>
<td><code>int</code></td>
<td>列表主体的宽度</td>
</tr>
<tr>
<td>isChosen</td>
<td><code>int</code></td>
<td>列表被选中的项</td>
</tr>
<tr>
<td>bgPressColor</td>
<td><code>int</code></td>
<td>项目被选中时的颜色</td>
</tr>
<tr>
<td>nowPage</td>
<td><code>int</code></td>
<td>列表所处的列数</td>
</tr>
<tr>
<td>pageFormat</td>
<td><code>string</code></td>
<td>显示页数的格式（使用 RawText 格式，允许使用两个 %d 表示当前页数和总页数）</td>
</tr>
</tbody>
</table>
</div>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>List(RawText _text,int _xpos=0,int _ypos=0,int _width=0,Form* _faObject=nullptr,vector &lt;RawText&gt;* _items=nullptr,int _perPage=5,int _bgPressColor=7,string _pageFormat=&quot;第 &amp;e%d&amp;7//%d 页&quot;)</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>preserve</td>
<td><code>int preserve()</code></td>
<td>维护列表。如果点击了列表的某一项，返回它的编号；否则返回 -1</td>
</tr>
<tr>
<td>nextPage</td>
<td><code>void nextPage()</code></td>
<td>前进至下一页（自带 print）</td>
</tr>
<tr>
<td>prevPage</td>
<td><code>void printPage()</code></td>
<td>后退至上一页（自带 print）</td>
</tr>
</tbody>
</table>
</div>
<p>*你可能需要额外自行定义几个按钮来实现换页功能。</p>
<h4 id="InputBox（v5-1-）"><a href="#InputBox（v5-1-）" class="headerlink" title="InputBox（v5.1+）"></a>InputBox（v5.1+）</h4><p>输入框控件。</p>
<p><strong>成员变量：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>text</td>
<td><code>RawText</code></td>
<td>输入框标题</td>
</tr>
<tr>
<td>width</td>
<td><code>int</code></td>
<td>输入框宽度</td>
</tr>
<tr>
<td>position</td>
<td><code>int</code></td>
<td>输入框位置：0 在标题右侧；1 在标题下侧</td>
</tr>
<tr>
<td>textColor</td>
<td><code>int</code></td>
<td>输入框在获得焦点时的颜色（背景/前景）</td>
</tr>
<tr>
<td>colorLoseFocus</td>
<td><code>int</code></td>
<td>输入框在失去焦点时的颜色（背景/前景）</td>
</tr>
<tr>
<td>nowText</td>
<td><code>string</code></td>
<td>输入框内的字符串</td>
</tr>
<tr>
<td>pwdChar</td>
<td><code>char</code></td>
<td>是否采用密码模式（为空格表示不采用，否则表示采用的密码字符）</td>
</tr>
<tr>
<td>hasFocus</td>
<td><code>bool</code></td>
<td>输入框是否获得焦点</td>
</tr>
</tbody>
</table>
</div>
<p>*由于输入框同时响应键盘，为了避免在不恰当的时候调用输入框，所以这里采用了焦点的模式——即失去焦点的输入框无法被输入字符。</p>
<p><strong>成员函数：</strong></p>
<p>构造函数：<code>InputBox(RawText _text,int _xpos=0,int _ypos=0,int _width=0,int _position=0,Form* _faObject=nullptr,int _textColor=0x8f,int _colorLoseFocus=0x7f,char _pwdChar=&#39; &#39;)</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>定义</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>preverse</td>
<td><code>void preverse()</code></td>
<td>维护输入框，包括对焦，键入字符等操作</td>
</tr>
</tbody>
</table>
</div>
<h3 id="控件示例"><a href="#控件示例" class="headerlink" title="控件示例"></a>控件示例</h3><h4 id="Form-示例"><a href="#Form-示例" class="headerlink" title="Form 示例"></a>Form 示例</h4><p>这个程序能够让你大概了解 Form 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - Form&quot;</span>,<span class="number">90</span>,<span class="number">45</span>); <span class="comment">//重定义控制台窗口大小/宽度/高度</span></span><br><span class="line">	hideCursor(); <span class="comment">//隐藏光标</span></span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>; <span class="comment">//创建一个左上角位于 (1,1) 的 Form，其高度/宽度分别为 45/90。这是一个主框架，所以没有父框架。背景颜色为 0（黑色）</span></span><br><span class="line">	<span class="function">Form <span class="title">Form1</span><span class="params">(<span class="number">5</span>,<span class="number">10</span>,<span class="number">35</span>,<span class="number">70</span>,&amp;mainForm,<span class="number">1</span>)</span></span>; <span class="comment">//创建一个左上角相对于其父框架 mainForm 位于 (5,10) 的 Form。其它同理</span></span><br><span class="line">	<span class="function">Form <span class="title">Form2</span><span class="params">(<span class="number">5</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">50</span>,&amp;Form1,<span class="number">2</span>)</span></span>;</span><br><span class="line">	<span class="function">Form <span class="title">Form3</span><span class="params">(<span class="number">3</span>,<span class="number">4</span>,<span class="number">21</span>,<span class="number">21</span>,&amp;Form2,<span class="number">3</span>)</span></span>;</span><br><span class="line">	<span class="function">Form <span class="title">Form4</span><span class="params">(<span class="number">3</span>,<span class="number">27</span>,<span class="number">21</span>,<span class="number">21</span>,&amp;Form2,<span class="number">4</span>)</span></span>;</span><br><span class="line">	_getch();</span><br><span class="line">	Form3.hide(); <span class="comment">//隐藏指令</span></span><br><span class="line">	_getch();</span><br><span class="line">	Form3.show(); <span class="comment">//显示指令</span></span><br><span class="line">	_getch();</span><br><span class="line">	Form2.hide();</span><br><span class="line">	_getch();</span><br><span class="line">	Form2.show();</span><br><span class="line">	_getch(); </span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意事项：</strong></p>
<ul>
<li>整个程序尽可能只有一个 Form 没有父框架。因为没有父框架的控件几乎不支持任何功能。</li>
<li>子框架的大小必须严格小于父框架的大小，否则在显示上会出现问题。</li>
<li>再次提醒：控件的坐标为其相对于父框架的坐标。</li>
<li>在程序运行时不要缩放控制台窗口，否则会出现不可预料的错误。</li>
<li>任何控件在被创建时，如果其父控件显示，则程序会试图显示该控件。</li>
</ul>
<h4 id="Button-示例"><a href="#Button-示例" class="headerlink" title="Button 示例"></a>Button 示例</h4><p>这个程序能够让你大概了解 Button 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - Button&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">bt</span><span class="params">(toRaw(<span class="string">&quot;  &amp;f关闭程序  &quot;</span>),<span class="number">10</span>,<span class="number">20</span>,&amp;mainForm,<span class="number">4</span>,<span class="number">12</span>)</span></span>; <span class="comment">//创建按钮，按钮的宽度会由按钮上的文字自动生成。按钮在触碰时显示红色（12），未触碰时显示深红色（4）</span></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123; <span class="comment">//持续地维护按钮</span></span><br><span class="line">		<span class="keyword">if</span> (bt.preserve()==<span class="number">2</span>) <span class="keyword">break</span>; <span class="comment">//如果按钮被点击，则退出程序</span></span><br><span class="line">	&#125;</span><br><span class="line">	bt.hide();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意事项：</strong></p>
<ul>
<li>为了正常地进行鼠标操作，<strong>请关闭控制台的“快速编辑模式”</strong>。</li>
</ul>
<h4 id="Label-示例"><a href="#Label-示例" class="headerlink" title="Label 示例"></a>Label 示例</h4><p>这个程序能够让你大概了解 Label 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - Label&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">Label <span class="title">lb</span><span class="params">(toRaw(<span class="string">&quot;&amp;f欢迎/n这里是 &amp;eConsoleUI5.0&amp;f/n如果有什么问题请联系 &amp;bCrystal302&quot;</span>),<span class="number">10</span>,<span class="number">20</span>,&amp;mainForm)</span></span>; <span class="comment">//这是一个显示多行字符的 Label</span></span><br><span class="line">	_getch();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意事项：</strong></p>
<ul>
<li>注意 RawText 中 <code>\n</code> 和 <code>/n</code> 的区别，前者是换行字符，后者是 RawText 控制字符。后者换行时还将与整句话的第一个字符列坐标对齐。</li>
</ul>
<h4 id="Option-amp-CheckBox-示例"><a href="#Option-amp-CheckBox-示例" class="headerlink" title="Option &amp; CheckBox 示例"></a>Option &amp; CheckBox 示例</h4><p>这个程序能够让你大概了解 Option 或 CheckBox 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - Option&amp;CheckBox&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">Form <span class="title">form1</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,&amp;mainForm,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">Label <span class="title">lb</span><span class="params">(toRaw(<span class="string">&quot;&amp;f请选择：/n你的性别：/n/n你掌握的语言：&quot;</span>),<span class="number">10</span>,<span class="number">20</span>,&amp;form1)</span></span>;</span><br><span class="line">	<span class="function">Option <span class="title">opMale</span><span class="params">(toRaw(<span class="string">&quot;&amp;b男&quot;</span>),<span class="number">12</span>,<span class="number">20</span>,&amp;form1,<span class="number">11</span>)</span></span>;</span><br><span class="line">	<span class="function">Option <span class="title">opFemale</span><span class="params">(toRaw(<span class="string">&quot;&amp;c女&quot;</span>),<span class="number">12</span>,<span class="number">32</span>,&amp;form1,<span class="number">12</span>)</span></span>;</span><br><span class="line">	<span class="function">CheckBox <span class="title">chkCpp</span><span class="params">(toRaw(<span class="string">&quot;&amp;bC++&quot;</span>),<span class="number">14</span>,<span class="number">20</span>,&amp;form1,<span class="number">11</span>)</span></span>;</span><br><span class="line">	<span class="function">CheckBox <span class="title">chkJava</span><span class="params">(toRaw(<span class="string">&quot;&amp;cJava&quot;</span>),<span class="number">14</span>,<span class="number">32</span>,&amp;form1,<span class="number">12</span>)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">bt</span><span class="params">(toRaw(<span class="string">&quot;  &amp;f确定  &quot;</span>),<span class="number">16</span>,<span class="number">24</span>,&amp;form1,<span class="number">2</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">		opMale.preserve(); <span class="comment">//维护四个选项框</span></span><br><span class="line">		opFemale.preserve();</span><br><span class="line">		chkCpp.preserve();</span><br><span class="line">		chkJava.preserve();</span><br><span class="line">		bt.enable=(opMale.chosen || opFemale.chosen) &amp;&amp; (chkCpp.chosen || chkJava.chosen); <span class="comment">//如果有选择按钮才启用</span></span><br><span class="line">		<span class="keyword">if</span> (bt.preserve()==<span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	opMale.visible=opFemale.visible=chkCpp.visible=chkJava.visible=bt.visible=<span class="number">0</span>;</span><br><span class="line">	lb.text.text=<span class="string">&quot;&amp;a感谢你做出的选择&quot;</span>;form1.show();form1.print(); <span class="comment">//控件.text.text 表示显示的 RawText 字符串</span></span><br><span class="line">	_getch();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意事项：</strong></p>
<ul>
<li>在需要同时隐藏一个 Form 内的多个控件时，不建议使用 <code>hide()</code>，而是采取修改 <code>visible</code>+手动打印父框架的方法。</li>
</ul>
<h4 id="ProgressBar-示例"><a href="#ProgressBar-示例" class="headerlink" title="ProgressBar 示例"></a>ProgressBar 示例</h4><p>这个程序能够让你大概了解 ProgressBar 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - ProgressBar&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="keyword">int</span> val=<span class="number">0</span>;</span><br><span class="line">	<span class="function">ProgressBar <span class="title">pb</span><span class="params">(toRaw(<span class="string">&quot;&amp;f进度条&quot;</span>),<span class="number">10</span>,<span class="number">10</span>,<span class="number">20</span>,&amp;mainForm,&amp;val,<span class="number">100</span>,<span class="number">12</span>,<span class="number">3</span>)</span></span>; <span class="comment">//进度条长度为 20，颜色为红色（12），风格为 3</span></span><br><span class="line">	<span class="function">Label <span class="title">lb</span><span class="params">(toRaw(<span class="string">&quot;按任意键增加进度条进度...&quot;</span>),<span class="number">8</span>,<span class="number">10</span>,&amp;mainForm)</span></span>;</span><br><span class="line">	<span class="keyword">while</span> (val&lt;<span class="number">100</span>)&#123;</span><br><span class="line">		_getch();val++;pb.print(); <span class="comment">//需要用 print 实时更新进度条状态</span></span><br><span class="line">	&#125;</span><br><span class="line">	_getch();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="LabelVal-示例"><a href="#LabelVal-示例" class="headerlink" title="LabelVal 示例"></a>LabelVal 示例</h4><p>这个程序能够让你大概了解 LabelVal 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - LabelVal&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="keyword">int</span> val=<span class="number">0</span>,maxVal=<span class="number">10</span>;</span><br><span class="line">	<span class="function">LabelVal <span class="title">lv</span><span class="params">(toRaw(<span class="string">&quot;&amp;f金币数：&quot;</span>),<span class="number">10</span>,<span class="number">10</span>,&amp;mainForm,&amp;val,<span class="number">14</span>,maxVal)</span></span>;</span><br><span class="line">	<span class="function">Label <span class="title">lb</span><span class="params">(toRaw(<span class="string">&quot;按任意键获得金币...&quot;</span>),<span class="number">16</span>,<span class="number">10</span>,&amp;mainForm)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">lvlUp</span><span class="params">(toRaw(<span class="string">&quot;  &amp;f提升容量  &quot;</span>),<span class="number">12</span>,<span class="number">10</span>,&amp;mainForm,<span class="number">2</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="keyword">int</span> upgradeCost=<span class="number">5</span>; </span><br><span class="line">	<span class="function">LabelVal <span class="title">lvCost</span><span class="params">(toRaw(<span class="string">&quot;&amp;f升级花费：&quot;</span>),<span class="number">12</span>,<span class="number">24</span>,&amp;mainForm,&amp;upgradeCost,<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (kbhit())&#123;</span><br><span class="line">			_getch();val=min(val+<span class="number">1</span>,maxVal);lv.print(); <span class="comment">//需要用 print 实时更新状态</span></span><br><span class="line">		&#125;	</span><br><span class="line">		lvlUp.enable=(val&gt;=upgradeCost);</span><br><span class="line">		<span class="keyword">if</span> (lvlUp.preserve()==<span class="number">2</span>)&#123;</span><br><span class="line">			lv.maxVal+=<span class="number">10</span>,maxVal+=<span class="number">10</span>; <span class="comment">//LabelVal::maxVal 不是指针，没有绑定变量</span></span><br><span class="line">			val-=upgradeCost,upgradeCost+=<span class="number">10</span>;</span><br><span class="line">			lv.print();lvCost.print(); </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	_getch();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="List-示例"><a href="#List-示例" class="headerlink" title="List 示例"></a>List 示例</h4><p>这个程序能够让你大概了解 List 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - List&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	Form mainForm=Form(<span class="number">1</span>,<span class="number">1</span>,<span class="number">90</span>,<span class="number">45</span>,<span class="literal">nullptr</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">vector</span> &lt;RawText&gt; lt=&#123;toRaw(<span class="string">&quot;&amp;e     添加    &quot;</span>),toRaw(<span class="string">&quot;&amp;c     退出    &quot;</span>)&#125;;</span><br><span class="line">	<span class="function">List <span class="title">list1</span><span class="params">(toRaw(<span class="string">&quot;Test  &quot;</span>),<span class="number">3</span>,<span class="number">6</span>,<span class="number">13</span>,&amp;mainForm,&amp;lt,<span class="number">4</span>)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">pre</span><span class="params">(toRaw(<span class="string">&quot;  &amp;0前一页  &quot;</span>),<span class="number">9</span>,<span class="number">6</span>,&amp;mainForm,<span class="number">10</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">nxt</span><span class="params">(toRaw(<span class="string">&quot;  &amp;0后一页  &quot;</span>),<span class="number">10</span>,<span class="number">6</span>,&amp;mainForm,<span class="number">11</span>,<span class="number">3</span>)</span></span>;</span><br><span class="line">	<span class="function">Button <span class="title">ok</span><span class="params">(toRaw(<span class="string">&quot;   &amp;0确定   &quot;</span>),<span class="number">11</span>,<span class="number">6</span>,&amp;mainForm,<span class="number">14</span>,<span class="number">6</span>)</span></span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">			list1.preserve();</span><br><span class="line">			<span class="keyword">if</span> (pre.preserve()==<span class="number">2</span>) list1.prevPage();</span><br><span class="line">			<span class="keyword">if</span> (nxt.preserve()==<span class="number">2</span>) list1.nextPage();</span><br><span class="line">			<span class="keyword">if</span> (ok.preserve()==<span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;	</span><br><span class="line">		<span class="keyword">if</span> (list1.isChosen==<span class="number">0</span>) lt.push_back(toRaw(<span class="string">&quot;&amp;d    新项目   &quot;</span>));</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (list1.isChosen==<span class="number">1</span>) <span class="keyword">break</span>; </span><br><span class="line">		list1.print();	</span><br><span class="line">	&#125;</span><br><span class="line">	pre.visible=nxt.visible=ok.visible=list1.visible=<span class="number">0</span>;</span><br><span class="line">	mainForm.print(); </span><br><span class="line">	_getch();</span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="InputBox-示例（v5-1-）"><a href="#InputBox-示例（v5-1-）" class="headerlink" title="InputBox 示例（v5.1+）"></a>InputBox 示例（v5.1+）</h4><p>这个程序能够让你大概了解 InputBox 的使用方式。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;console.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	setWindowSize(<span class="string">&quot;Example - InputBox&quot;</span>,<span class="number">90</span>,<span class="number">45</span>);</span><br><span class="line">	hideCursor();</span><br><span class="line">	<span class="function">Form <span class="title">mainForm</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,<span class="literal">nullptr</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">Form <span class="title">form1</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">45</span>,<span class="number">90</span>,&amp;mainForm,<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="function">InputBox <span class="title">user</span><span class="params">(toRaw(<span class="string">&quot;请输入账号：&quot;</span>),<span class="number">6</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">0</span>,&amp;form1)</span></span>;</span><br><span class="line">	<span class="function">InputBox <span class="title">password</span><span class="params">(toRaw(<span class="string">&quot;请输入密码：&quot;</span>),<span class="number">8</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">0</span>,&amp;form1,<span class="number">0x8f</span>,<span class="number">0x7f</span>,<span class="string">&#x27;*&#x27;</span>)</span></span>; <span class="comment">//密码字符为 *</span></span><br><span class="line">	<span class="function">Button <span class="title">ok</span><span class="params">(toRaw(<span class="string">&quot;  &amp;f确定  &quot;</span>),<span class="number">10</span>,<span class="number">6</span>,&amp;form1,<span class="number">2</span>,<span class="number">10</span>)</span></span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">		user.preserve();</span><br><span class="line">		password.preserve();</span><br><span class="line">		ok.enable=(user.nowText.size()&gt;<span class="number">0</span>) &amp;&amp; (password.nowText.size()&gt;<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">if</span> (ok.preserve()==<span class="number">2</span>) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	form1.hide();</span><br><span class="line">	gotoxy(<span class="number">1</span>,<span class="number">1</span>);tellraw(RawText(<span class="string">&quot;&amp;f您的账号：&amp;e%s&amp;f 密码：&amp;e%s&quot;</span>,&#123;&#125;,&#123;user.nowText,password.nowText&#125;)); </span><br><span class="line">	_getch(); </span><br><span class="line">	showCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>21/01/06 模拟</title>
    <url>/2021/01/06/210106/</url>
    <content><![CDATA[<p>cnt/str/opt</p>
<a id="more"></a>
<h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><p>咕咕咕……</p>
<h3 id="B"><a href="#B" class="headerlink" title="B"></a>B</h3><p>Codeforces 573E</p>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><p>BZOJ 3499</p>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>21/01/04 模拟</title>
    <url>/2021/01/06/210104/</url>
    <content><![CDATA[<p>遛狗/旅行/评分</p>
<a id="more"></a>
<p>BZOJ4983/BZOJ4984/BZOJ4985</p>
<p>咕咕咕……</p>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>Showhand 模拟器</title>
    <url>/2021/01/03/showhand/</url>
    <content><![CDATA[<p>Showhand 模拟器 - 最新版本 v1.3.0</p>
<a id="more"></a>
<p><b><font color=green>本项目正在持续更新。</font></b></p>
<p>Showhand 模拟器是一款基于控制台的双人游戏。支持局域网连接。</p>
<p><code>readme.md</code> 文件从此项目起将<strong>不会</strong>涵盖在各版本的目录下。而是在<strong>本文档</strong>更新。</p>
<p>下载地址：</p>
<p>Beta v1.0.0 <a href="https://zombie462.github.io/items/showhand.zip">点击下载</a></p>
<p>Beta v1.1.0 <a href="https://zombie462.github.io/items/showhand_v1.1.zip">点击下载</a></p>
<p>Beta v1.2.0 <a href="https://zombie462.github.io/items/showhand_v1.2.zip">点击下载</a></p>
<p>Beta v1.3.0 <a href="https://zombie462.github.io/items/showhand_v1.3.zip">点击下载</a></p>
<h3 id="README-MD"><a href="#README-MD" class="headerlink" title="README.MD"></a>README.MD</h3><h4 id="操作说明"><a href="#操作说明" class="headerlink" title="操作说明"></a>操作说明</h4><p>按照游戏中的指示完成操作即可。</p>
<p>注意：程序中的选项框使用 <code>WS</code> 键控制选项，当然 <code>AD</code> 和数字键也有各自的妙用。空格键选中选项。</p>
<p>运行时请根据系统指示打开防火墙的权限。</p>
<h4 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h4><p>Beta v1.0.0 内容一览</p>
<ul>
<li>支持双人对战的经典 Showhand 游戏</li>
<li>游戏结果手动判定，由双方统一通过决定。</li>
<li>采用 consoleUI 库和 serverUI 库，此功能由 zombie462 维护。</li>
</ul>
<p>Beta v1.1.0 内容一览</p>
<ul>
<li>增加了自定义规则。</li>
<li>现在当前牌大的将获得先手资格。</li>
</ul>
<p>Beta v1.2.0 内容一览</p>
<ul>
<li>修复了不符合经典游戏规定的 BUG。</li>
</ul>
<p>Beta v1.3.0 内容一览</p>
<ul>
<li>加入了版本校验功能。服务端和客户端必须版本号相同才能连接。</li>
<li>支持设置最大下注和梭注功能。</li>
</ul>
<p><strong><font color=red>请不要混用版本，尤其是 v1.3.0 之前的。</font></strong></p>
<h4 id="开源说明"><a href="#开源说明" class="headerlink" title="开源说明"></a>开源说明</h4><p>本项目公测（Beta）版本提供源代码供学习。</p>
<p>编译时请开启 <code>-std=c++11 -lwsock32</code> 编译选项。</p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/27 模拟</title>
    <url>/2020/12/27/201227/</url>
    <content><![CDATA[<p>大佬的难题/回文串/营养餐</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>给定三个长度为 $n$ 的排列 $\{a_i\},\{b_i\},\{c_i\}$，求：</p>
<script type="math/tex; mode=display">
\sum_{1\leq x,y\leq n}[a_x<a_y][b_x<b_y][c_x<c_y]</script><p>$n\leq 2\times 10^6$。给定种子，数据在程序中生成。</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>设 $A,B,C$ 分别表示满足 $a_x&lt;a_y,b_x&lt;b_y,c_x&lt;c_y$ 的 $(x,y)$ 集合。</p>
<p>答案就是 $|A\cap B\cap C|$。 </p>
<p>根据容斥原理，有：</p>
<script type="math/tex; mode=display">
|A\cup B\cup C|=|A|+|B|+|C|-|A\cap B|-|A\cap C|-|B\cap C|+|A\cap B\cap C|\cdots\cdots(1)</script><p>显然 $|A|=|B|=|C|=\dfrac{n(n-1)}2$，因为 $(x,y)$ 和 $(y,x)$ 至少有一对满足至少一个偏序关系。</p>
<p>而与 $A\cap B\cap C$ 大小相同的逆（即 $(x,y)$ 变成 $(y,x)$）一定是和 $A\cup B\cup C$ 的补集相同。所以：</p>
<script type="math/tex; mode=display">
|A\cap B\cap C|=n(n-1)-|A\cup B\cup C|\cdots\cdots(2)</script><p>将 $(2)$ 代入 $(1)$，不难得到：</p>
<script type="math/tex; mode=display">
Ans=|A\cap B\cap C|=\dfrac{|A\cap B|+|A\cap C|+|B\cap C|-\frac{n(n-1)}2}{2}</script><p>其中 $|A\cap B|,|A\cap C|,|B\cap C|$ 的大小是经典的逆序对问题，树状数组求解即可。 </p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">int</span> n,seed; </span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; a,b,c,s,f;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myrand</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> seed=((seed*<span class="number">19260817</span>)^<span class="number">233333</span>)&amp;((<span class="number">1</span>&lt;&lt;<span class="number">24</span>)<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gen</span><span class="params">(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; &amp;a)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=i;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) swap(a[i],a[myrand()%i+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (;x&lt;=n;x+=x&amp;-x) s[x]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> res=<span class="number">0</span>;<span class="keyword">for</span> (;x;x-=x&amp;-x) res+=s[x];<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; &amp;a,<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; &amp;b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[a[i]]=b[i];</span><br><span class="line">	s.clear();s.resize(n+<span class="number">1</span>);<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		sum+=query(f[i]);modify(f[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;dalao.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;dalao.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	n=read();a.resize(n+<span class="number">1</span>);b.resize(n+<span class="number">1</span>);c.resize(n+<span class="number">1</span>);f.resize(n+<span class="number">1</span>);</span><br><span class="line">	seed=read();gen(a);</span><br><span class="line">	seed=read();gen(b);</span><br><span class="line">	seed=read();gen(c);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;(solve(a,b)+solve(b,c)+solve(a,c)-n*(n<span class="number">-1</span>)/<span class="number">2</span>)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>不会，咕咕咕。</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p>有一棵树，每个节点有两个权值 $a_i$ 和 $b_i$，两个人轮流操作，每个人每次选择一个节点使得其 $a_i$ 减去一个正整数。始终需要保证：</p>
<script type="math/tex; mode=display">
\forall i\to a_i\geq 0,\forall x\to a_x\geq \sum_{y\in child(i)}a_y\times b_y</script><p>无法操作者失败。求先手是否必胜。</p>
<p>$n\leq 5\times 10^4$，每个测试点至多 $10$ 组数据。</p>
<h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>令 $c_i=a_i-\sum_{j\in child(i)}a_j\times b_j$。</p>
<p>题目变形为：每个人每次选择一个节点使得其 $c_i$ 减去一个正整数 $p$，并使该节点的父亲 $c_{fa}$ 加上 $p\times b_i$。</p>
<p>如果 $b_i=0$，那么显然每个节点独立。答案为所有节点的异或和。</p>
<p>如果 $b_i=1$，显然是一个阶梯 nim 的模型。答案为所有奇数深度节点（根节点深度为 $1$）的异或和。</p>
<p>如果 $b_i\leq 1$，将 $b_i=0$ 的点连同它的子树从原树上独立出去，形成一个森林。每棵树的贡献为奇数深度节点的异或和。总贡献为所有树贡献的异或和。</p>
<p>如果 $b_i&gt;1$，发现上述结论（阶梯 nim 的结论）依然适用，用同样的做法即可。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> etot,ea[N&lt;&lt;<span class="number">1</span>],eb[N&lt;&lt;<span class="number">1</span>],ec[N],a[N],b[N],c[N],sum,fa[N]; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	etot++;ea[etot]=y;eb[etot]=ec[x];ec[x]=etot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">bool</span> p)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (p) sum^=c[x];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> y=ea[i];</span><br><span class="line">		<span class="keyword">if</span> (y!=fa[x])&#123;</span><br><span class="line">			<span class="keyword">if</span> (!b[y]) dfs2(y,<span class="number">1</span>);</span><br><span class="line">			<span class="keyword">else</span> dfs2(y,!p);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">	fa[x]=f;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> y=ea[i];</span><br><span class="line">		<span class="keyword">if</span> (y!=f) dfs1(y,x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;meal.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;meal.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> T=read();</span><br><span class="line">	<span class="keyword">while</span> (T --&gt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> n=read();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) b[i]=read();</span><br><span class="line">		<span class="built_in">memset</span>(ec,<span class="number">0</span>,<span class="keyword">sizeof</span>(ec));etot=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;++i)&#123;</span><br><span class="line">			<span class="keyword">int</span> x=read(),y=read();</span><br><span class="line">			addEdge(x,y);addEdge(y,x);</span><br><span class="line">		&#125;</span><br><span class="line">		dfs1(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">			c[i]=a[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j=ec[i];j;j=eb[j])&#123;</span><br><span class="line">				<span class="keyword">if</span> (ea[j]!=fa[i]) c[i]-=a[ea[j]]*b[ea[j]];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		sum=<span class="number">0</span>;dfs2(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">		<span class="built_in">puts</span>(sum==<span class="number">0</span>?<span class="string">&quot;NO&quot;</span>:<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>英语听写辅助 Beta</title>
    <url>/2020/12/23/english/</url>
    <content><![CDATA[<p>EnglishStudy Beta - 最新版本 v1.0.0</p>
<a id="more"></a>
<p><b><font color=red>本项目无限期停止更新。</font></b></p>
<p>EnglishStudy Beta 是一款基于控制台的英语听写辅助软件。</p>
<p><code>readme.md</code> 文件从此项目起将<strong>不会</strong>涵盖在各版本的目录下。而是在<strong>本文档</strong>更新。</p>
<p>下载地址：</p>
<p>Beta v1.0.0 <a href="https://zombie462.github.io/items/EnglishStudy_Beta1.0.0.zip">点击下载</a></p>
<h3 id="README-MD"><a href="#README-MD" class="headerlink" title="README.MD"></a>README.MD</h3><h4 id="操作说明"><a href="#操作说明" class="headerlink" title="操作说明"></a>操作说明</h4><p>按照程序中的指示完成配置/学习单词表即可。</p>
<p>注意：程序中的选项框使用 <code>WS</code> 键控制选项，当然 <code>AD</code> 和数字键也有各自的妙用。空格键选中选项。</p>
<h4 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h4><p>Alpha v1.0.0 内容一览</p>
<ul>
<li><p>支持创建、保存、编辑单词表功能。</p>
</li>
<li><p>支持学习单词表功能。错误的单词会追加到学习清单末尾，直到正确为止。</p>
<p>上述功能由 Crystal302 实现（Created By Crystal302）。即程序的主体架构、主要功能设计等。</p>
</li>
<li><p>使用彩色控制台界面，优化操作手感和学习体验。</p>
<p>此功能由 Zombie462 维护（Powered By Zombie462）。参见辅助类项目 <code>consoleUI.h</code>（此项目未在 Crystal302 的博客发布）。</p>
</li>
</ul>
<p>Beta v1.0.0 更新内容</p>
<ul>
<li><p>现在单词学习时采用<strong>非严格比较模式</strong>，比较时将忽略部分无实际意义/意义不清的部分（比如 <code>...</code> 等）。</p>
<p>此功能由 Qingyu 维护（Powered By Qingyu）。</p>
</li>
</ul>
<h4 id="开源说明"><a href="#开源说明" class="headerlink" title="开源说明"></a>开源说明</h4><p>本项目公测（Beta）版本提供源代码供学习。</p>
<h4 id="已知-Bug"><a href="#已知-Bug" class="headerlink" title="已知 Bug"></a>已知 Bug</h4><p>Beta v1.0.0</p>
<ul>
<li>非严格比较模式已知存在部分 Bug。下一个版本将尝试修复。</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/22 上午</title>
    <url>/2020/12/22/201222/</url>
    <content><![CDATA[<p>Minium Cut/Tree/塔</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定 $n$ 个点两两之间的最小割，还原出原图。</p>
<p>$n\leq 100$。</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>显然这些最小割只会有 $n-1$ 种不同的取值，它们构成了一棵最小割树。所以答案是一棵树。</p>
<p>如何构造最小割树？每次选一个最小的割，这一定是答案上的一条边，将树分成两部分，割大于该最小值的划到一个集合内，剩下的划到另一个集合内。这两个集合如果有交就是无解。否则将这两个集合递归求解。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">210</span>;</span><br><span class="line"><span class="keyword">int</span> a[N][N],f[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x,y,z;</span><br><span class="line">	Edge(<span class="keyword">int</span> _x=<span class="number">0</span>,<span class="keyword">int</span> _y=<span class="number">0</span>,<span class="keyword">int</span> _z=<span class="number">0</span>)&#123;</span><br><span class="line">		x=_x;y=_y;z=_z;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span> &lt;Edge&gt; E;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> f[x]==x?x:f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeit</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	x=find(x);y=find(y);</span><br><span class="line">	<span class="keyword">if</span> (x!=y) f[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> siz=v.size(),minx=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">	<span class="keyword">if</span> (siz==<span class="number">0</span> || siz==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=siz<span class="number">-1</span>;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=siz<span class="number">-1</span>;++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i!=j) minx=min(minx,a[v[i]][v[j]]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=siz<span class="number">-1</span>;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> res=<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=siz<span class="number">-1</span>;++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (i!=j &amp;&amp; minx==a[v[i]][v[j]])&#123;</span><br><span class="line">				res=j;<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (~res)&#123;</span><br><span class="line">			x=v[i];y=v[res];<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	E.push_back(Edge(x,y,minx));</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=siz<span class="number">-1</span>;++i) f[v[i]]=v[i];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=siz<span class="number">-1</span>;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=siz<span class="number">-1</span>;++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[v[i]][v[j]]&gt;minx) mergeit(v[i],v[j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (find(x)==find(y)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">int</span> tmp=find(x);</span><br><span class="line">	<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vl,vr;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=siz<span class="number">-1</span>;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span> (find(v[i])==tmp) vl.push_back(v[i]);</span><br><span class="line">		<span class="keyword">else</span> vr.push_back(v[i]); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> solve(vl) &amp;&amp; solve(vr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;cut.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;cut.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read();</span><br><span class="line">	<span class="built_in">set</span> &lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">			a[i][j]=read();</span><br><span class="line">			<span class="keyword">if</span> (i!=j) st.insert(a[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ((<span class="keyword">int</span>)st.size()&gt;n<span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) v.push_back(i);</span><br><span class="line">		<span class="keyword">if</span> (solve(v))&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n<span class="number">-1</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)E.size();++i)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,E[i].x,E[i].y,E[i].z);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>); </span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>给定一棵树，在树上依次找出 $k$ 个不同的点 $a_1,a_2,\cdots,a_k$，最小化：</p>
<script type="math/tex; mode=display">
\sum^{k-1}_{i=1}dis(a_ia_{i+1})</script><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>这 $k$ 个点显然构成了一条非简单的链，要求链长最短。</p>
<p>显然一条边最多被访问两次，否则一定不优。</p>
<p>所以可以树形 dp。$f_{i,j,k}$ 表示考虑了 $i$ 为根的子树（且选取了 $i$），在其中选取了 $j$ 个点，并且整条链有 $k$ 个端点在子树内部，此时的最小边权和。</p>
<p>考虑一条边 $(u,v)$ 对答案的贡献。如果有 $0$ 个端点在 $u$ 子树内部，表示这条链进入子树又出来，贡献有两倍的边长。如果有 $1$ 个端点在 $u$ 子树的内部，表示这条链进入子树不出来，贡献有一倍的边长。如果有 $2$ 个端点在 $u$ 子树的内部，表示这条链从子树内部出发，回到 $u$ 向上，然后再回来，贡献有两倍的边长。</p>
<p>dp 转移是显然的。考虑背包 dp，枚举一个点 $u$ 和它的子树 $v$，枚举两边子树的个数，再枚举链端的个数，进行合并。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">	siz[x]=<span class="number">1</span>;f[x][<span class="number">0</span>][<span class="number">0</span>]=f[x][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> y=ea[i],z=ed[i];</span><br><span class="line">		<span class="keyword">if</span> (y==fa) <span class="keyword">continue</span>;</span><br><span class="line">		dfs(y,x);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=siz[x]<span class="number">-1</span>;j&gt;=<span class="number">0</span>;--j)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=siz[y]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;--k)&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> p=<span class="number">2</span>;p&gt;=<span class="number">0</span>;--p)&#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> q=p;q&gt;=<span class="number">0</span>;--q)&#123;</span><br><span class="line">						f[x][j+k+<span class="number">1</span>][p]=min(f[x][j+k+<span class="number">1</span>][p],f[x][j][p-q]+f[y][k][q]+z*(<span class="number">2</span>-(q&amp;<span class="number">1</span>)));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		siz[x]+=siz[y];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>时间复杂度 $O(n^2)$ 级别。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">3010</span>;</span><br><span class="line"><span class="keyword">int</span> ea[N&lt;&lt;<span class="number">1</span>],eb[N&lt;&lt;<span class="number">1</span>],ec[N],ed[N&lt;&lt;<span class="number">1</span>],etot;</span><br><span class="line"><span class="keyword">int</span> siz[N],f[N][N][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">	etot++;ea[etot]=y;eb[etot]=ec[x];ec[x]=etot;ed[etot]=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">	siz[x]=<span class="number">1</span>;f[x][<span class="number">0</span>][<span class="number">0</span>]=f[x][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> y=ea[i],z=ed[i];</span><br><span class="line">		<span class="keyword">if</span> (y==fa) <span class="keyword">continue</span>;</span><br><span class="line">		dfs(y,x);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=siz[x]<span class="number">-1</span>;j&gt;=<span class="number">0</span>;--j)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=siz[y]<span class="number">-1</span>;k&gt;=<span class="number">0</span>;--k)&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> p=<span class="number">2</span>;p&gt;=<span class="number">0</span>;--p)&#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> q=p;q&gt;=<span class="number">0</span>;--q)&#123;</span><br><span class="line">						f[x][j+k+<span class="number">1</span>][p]=min(f[x][j+k+<span class="number">1</span>][p],f[x][j][p-q]+f[y][k][q]+z*(<span class="number">2</span>-(q&amp;<span class="number">1</span>)));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		siz[x]+=siz[y];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;tree.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;tree.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read(),m=read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read(),z=read();</span><br><span class="line">		addEdge(x,y,z);addEdge(y,x,z);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">2</span>;++j)&#123;</span><br><span class="line">			ans=min(ans,f[i][m<span class="number">-1</span>][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>有一个开始为空的字符串，你需要支持在开头插入一个字符，在结尾插入一个字符，或者询问字符串中最长回文串的长度。此外，还应该支持撤销操作。强制在线。</p>
<p>$q\leq 10^7$。</p>
<h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>hash 是万能的字符串方法。</p>
<p>显然在端点插入字符最多会使得答案变大 $2$，并且新的最长回文串一定是端点处连续一段字符串。</p>
<p>直接暴力 hash 判断即可。</p>
<p>至于回退操作，直接让两端的指针复原到那个时候的状态，并将答案回复到当时的结果。显然不会有后效性。</p>
<p><strong>记得使用高效的输入方式。</strong></p>
<p><strong>hash 模数不要是 998244353。</strong></p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">10000010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> bs=<span class="number">133</span>;</span><br><span class="line"><span class="keyword">char</span> s[N*<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> lpos,rpos;</span><br><span class="line"><span class="keyword">int</span> stk[N],tp;</span><br><span class="line"><span class="keyword">int</span> hsl1[N],hsl2[N],hsr1[N],hsr2[N],powp[N],powi[N],ans[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1L</span>L*x*y%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x+y&gt;=mod?x+y-mod:x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x-y&lt;<span class="number">0</span>?x-y+mod:x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getinv</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&lt;=<span class="number">1</span>?<span class="number">1</span>:mul(mod-mod/x,getinv(mod%x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkL</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (lpos+rpos&lt;x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (x&lt;=lpos)&#123;</span><br><span class="line">		<span class="keyword">int</span> hs1=mul(sub(hsl1[lpos],hsl1[lpos-x]),powi[lpos-x+<span class="number">1</span>]);</span><br><span class="line">		<span class="keyword">int</span> hs2=mul(sub(hsl2[lpos],hsl2[lpos-x]),powp[lpos]);</span><br><span class="line">		<span class="keyword">return</span> hs1==hs2;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> hs1=add(mul(hsl1[lpos],powp[x-lpos<span class="number">-1</span>]),mul(hsr2[x-lpos],powp[x-lpos]));</span><br><span class="line">		<span class="keyword">int</span> hs2=add(mul(hsl2[lpos],powp[lpos]),mul(hsr1[x-lpos],powp[lpos<span class="number">-1</span>]));</span><br><span class="line">		<span class="keyword">return</span> hs1==hs2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkR</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (lpos+rpos&lt;x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (x&lt;=rpos)&#123;</span><br><span class="line">		<span class="keyword">int</span> hs1=mul(sub(hsr1[rpos],hsr1[rpos-x]),powi[rpos-x+<span class="number">1</span>]);</span><br><span class="line">		<span class="keyword">int</span> hs2=mul(sub(hsr2[rpos],hsr2[rpos-x]),powp[rpos]);</span><br><span class="line">		<span class="keyword">return</span> hs1==hs2;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> hs1=add(mul(hsr1[rpos],powp[x-rpos<span class="number">-1</span>]),mul(hsl2[x-rpos],powp[x-rpos]));</span><br><span class="line">		<span class="keyword">int</span> hs2=add(mul(hsr2[rpos],powp[rpos]),mul(hsl1[x-rpos],powp[rpos<span class="number">-1</span>]));</span><br><span class="line">		<span class="keyword">return</span> hs1==hs2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;tower.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;tower.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n;<span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>,&amp;n);<span class="keyword">int</span> ibs=getinv(bs);</span><br><span class="line">	powp[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) powp[i]=mul(powp[i<span class="number">-1</span>],bs);</span><br><span class="line">	powi[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) powi[i]=mul(powi[i<span class="number">-1</span>],ibs);</span><br><span class="line">	gets(s+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;<span class="keyword">int</span> lans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">3</span>;i+=<span class="number">3</span>)&#123;</span><br><span class="line">		<span class="keyword">int</span> op=s[i]<span class="number">-48</span>,num=(s[i+<span class="number">1</span>]<span class="number">-48</span>)*<span class="number">10</span>+(s[i+<span class="number">2</span>]<span class="number">-48</span>);num=(num+lans)%<span class="number">100</span>; </span><br><span class="line">		<span class="keyword">if</span> (op==<span class="number">1</span>)&#123;</span><br><span class="line">			lpos++;stk[++tp]=<span class="number">1</span>;</span><br><span class="line">			hsl1[lpos]=add(hsl1[lpos<span class="number">-1</span>],mul(num,powp[lpos]));</span><br><span class="line">			hsl2[lpos]=add(hsl2[lpos<span class="number">-1</span>],mul(num,powi[lpos]));</span><br><span class="line">			<span class="keyword">if</span> (checkL(ans[tp<span class="number">-1</span>]+<span class="number">2</span>)) ans[tp]=ans[tp<span class="number">-1</span>]+<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (checkL(ans[tp<span class="number">-1</span>]+<span class="number">1</span>)) ans[tp]=ans[tp<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> ans[tp]=ans[tp<span class="number">-1</span>];</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span> (op==<span class="number">2</span>)&#123;</span><br><span class="line">			rpos++;stk[++tp]=<span class="number">2</span>;</span><br><span class="line">			hsr1[rpos]=add(hsr1[rpos<span class="number">-1</span>],mul(num,powp[rpos]));</span><br><span class="line">			hsr2[rpos]=add(hsr2[rpos<span class="number">-1</span>],mul(num,powi[rpos]));</span><br><span class="line">			<span class="keyword">if</span> (checkR(ans[tp<span class="number">-1</span>]+<span class="number">2</span>)) ans[tp]=ans[tp<span class="number">-1</span>]+<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (checkR(ans[tp<span class="number">-1</span>]+<span class="number">1</span>)) ans[tp]=ans[tp<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> ans[tp]=ans[tp<span class="number">-1</span>];</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;++i)&#123;</span><br><span class="line">				<span class="keyword">if</span> (stk[tp--]==<span class="number">1</span>) lpos--;</span><br><span class="line">				<span class="keyword">else</span> rpos--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		res+=(lans=ans[tp]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/20 五校联考</title>
    <url>/2020/12/21/201220/</url>
    <content><![CDATA[<p>抓猫/摸鱼/人民摸鱼家</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>Codeforces 97E</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>咕咕咕。</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>有 $k$ 个迷宫。每个迷宫的起点分别为 $sx_i,sy_i$，终点分别为 $tx_i,ty_j$。有 $k$ 条鱼依次位于这 $k$ 个起点。</p>
<p>每一秒每一条与可以选择向上下左右的其中一个方向移动一格，也可以不动。如果任意时刻所有 $k$ 条鱼在同一位置，它们可以选择合体。合体的鱼将能通过任意一条鱼所能通过的位置（相当于所有迷宫可行走位置的并）。它们任意时刻都可以选择解体。</p>
<p>求所有鱼在最优策略下，至少需要多少时间才能到达各自的终点。如果不能，则求出至多有多少条鱼能到达各自的终点。</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>显然这些鱼最多只会合体一次。最优的轨迹一定是所有鱼从格子起点到达一个位置合体，然后移动到另一个位置解体，最后到达各自的终点（或者不合体直接到各自的终点）。预处理出所有鱼从起点集中到一个点的最远距离 $disS_{x,y}$，以及所有鱼从一个点分散到终点的最远距离 $disT_{x,y}$。显然可以建图跑最短路。具体地，从源点建长度为 $disS_{x,y}$ 的边到各点，从各点建长度为 $disT_{x,y}$ 的边到汇点，各点间建合体鱼能走的边构成的网格图。跑源点到汇点的最短路即可。如果结果为 inf，说明答案为 No，此时再简单计算最多的鱼条数即可。</p>
<p><strong>注意细节。</strong></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">210</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k,etot;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">6</span>][N][N],sx[N],sy[N],tx[N],ty[N],disS[N][N],disT[N][N],dis[N][N],dis2[N*N*<span class="number">2</span>],sumS[N][N],sumT[N][N];</span><br><span class="line"><span class="keyword">int</span> ea[N*N*<span class="number">10</span>],eb[N*N*<span class="number">10</span>],ec[N*N*<span class="number">2</span>],ed[N*N*<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[N*N*<span class="number">2</span>],vis2[N][N];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rar</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (x<span class="number">-1</span>)*m+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">	etot++;ea[etot]=y;eb[etot]=ec[x];ec[x]=etot;ed[etot]=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdis</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> sx,<span class="keyword">int</span> sy)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">	<span class="built_in">queue</span> &lt; <span class="built_in">pair</span> &lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">	dis[sx][sy]=<span class="number">0</span>;q.push(<span class="built_in">make_pair</span>(sx,sy));</span><br><span class="line">	<span class="keyword">if</span> (!f[t][sx][sy]) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">		<span class="keyword">int</span> x=q.front().first,y=q.front().second;q.pop();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">			<span class="keyword">int</span> xx=x+dx[i],yy=y+dy[i];</span><br><span class="line">			<span class="keyword">if</span> (xx&gt;<span class="number">0</span> &amp;&amp; yy&gt;<span class="number">0</span> &amp;&amp; xx&lt;=n &amp;&amp; yy&lt;=m &amp;&amp; f[t][xx][yy] &amp;&amp; dis[x][y]+<span class="number">1</span>&lt;dis[xx][yy])&#123;</span><br><span class="line">				dis[xx][yy]=dis[x][y]+<span class="number">1</span>;</span><br><span class="line">				q.push(<span class="built_in">make_pair</span>(xx,yy));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> S,<span class="keyword">int</span> T)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(dis2,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dis2));</span><br><span class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">	<span class="built_in">priority_queue</span> &lt; <span class="built_in">pair</span> &lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">	dis2[S]=<span class="number">0</span>;q.push(<span class="built_in">make_pair</span>(<span class="number">0</span>,S));</span><br><span class="line">	<span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">		<span class="keyword">int</span> x=q.top().second;q.pop();</span><br><span class="line">		<span class="keyword">if</span> (vis[x]) <span class="keyword">continue</span>;</span><br><span class="line">		vis[x]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">			<span class="keyword">int</span> y=ea[i],z=ed[i];</span><br><span class="line">			<span class="keyword">if</span> (dis2[y]&gt;dis2[x]+z)&#123;</span><br><span class="line">				dis2[y]=dis2[x]+z;</span><br><span class="line">				q.push(<span class="built_in">make_pair</span>(-dis2[y],y));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dis2[T];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">memset</span>(vis2,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis2));</span><br><span class="line">	<span class="built_in">queue</span> &lt; <span class="built_in">pair</span> &lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">			<span class="keyword">if</span> (sumS[i][j]==k &amp;&amp; f[<span class="number">0</span>][i][j])&#123;</span><br><span class="line">				q.push(<span class="built_in">make_pair</span>(i,j));</span><br><span class="line">				vis2[i][j]=<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">		<span class="keyword">int</span> x=q.front().first,y=q.front().second;q.pop();</span><br><span class="line">		res=max(res,sumT[x][y]);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">			<span class="keyword">int</span> xx=x+dx[i],yy=y+dy[i];</span><br><span class="line">			<span class="keyword">if</span> (xx&gt;<span class="number">0</span> &amp;&amp; yy&gt;<span class="number">0</span> &amp;&amp; xx&lt;=n &amp;&amp; yy&lt;=m &amp;&amp; !vis2[xx][yy] &amp;&amp; f[<span class="number">0</span>][xx][yy])&#123;</span><br><span class="line">				vis2[xx][yy]=<span class="number">1</span>;q.push(<span class="built_in">make_pair</span>(xx,yy));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;fish.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;fish.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> T=read();</span><br><span class="line">	<span class="keyword">while</span> (T --&gt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">memset</span>(ec,<span class="number">0</span>,<span class="keyword">sizeof</span>(ec));etot=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">		n=read(),m=read(),k=read();</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line">				<span class="keyword">int</span> x=read();<span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=k;++t)&#123;</span><br><span class="line">					<span class="keyword">if</span> (!(x&amp;(<span class="number">1</span>&lt;&lt;(t<span class="number">-1</span>))))&#123;</span><br><span class="line">						f[t][i][j]=<span class="number">1</span>;flag=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				f[<span class="number">0</span>][i][j]=flag;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=k;++t)&#123;</span><br><span class="line">			sx[t]=read();sy[t]=read();tx[t]=read();ty[t]=read();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>,cnt=k;</span><br><span class="line">		<span class="built_in">memset</span>(disS,<span class="number">0</span>,<span class="keyword">sizeof</span>(disS));</span><br><span class="line">		<span class="built_in">memset</span>(disT,<span class="number">0</span>,<span class="keyword">sizeof</span>(disT));</span><br><span class="line">		<span class="built_in">memset</span>(sumS,<span class="number">0</span>,<span class="keyword">sizeof</span>(sumS));</span><br><span class="line">		<span class="built_in">memset</span>(sumT,<span class="number">0</span>,<span class="keyword">sizeof</span>(sumT));</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=k;++t)&#123;</span><br><span class="line">			getdis(t,sx[t],sy[t]);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line">					disS[i][j]=max(disS[i][j],dis[i][j]);</span><br><span class="line">					<span class="keyword">if</span> (dis[i][j]!=inf) sumS[i][j]++; </span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (dis[tx[t]][ty[t]]==inf) cnt--;</span><br><span class="line">			ans=max(ans,dis[tx[t]][ty[t]]);</span><br><span class="line">			getdis(t,tx[t],ty[t]);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line">					disT[i][j]=max(disT[i][j],dis[i][j]);</span><br><span class="line">					<span class="keyword">if</span> (dis[i][j]!=inf) sumT[i][j]++;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> S=n*m+<span class="number">1</span>,T=n*m+<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line">				<span class="keyword">if</span> (f[<span class="number">0</span>][i][j])&#123;</span><br><span class="line">					<span class="keyword">if</span> (disS[i][j]!=inf) addEdge(S,rar(i,j),disS[i][j]);</span><br><span class="line">					<span class="keyword">if</span> (disT[i][j]!=inf) addEdge(rar(i,j),T,disT[i][j]);</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> p=<span class="number">0</span>;p&lt;<span class="number">4</span>;++p)&#123;</span><br><span class="line">						<span class="keyword">int</span> x=i+dx[p],y=j+dy[p];</span><br><span class="line">						<span class="keyword">if</span> (x&gt;<span class="number">0</span> &amp;&amp; j&gt;<span class="number">0</span> &amp;&amp; x&lt;=n &amp;&amp; y&lt;=m &amp;&amp; f[<span class="number">0</span>][x][y]) addEdge(rar(i,j),rar(x,y),<span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans=min(ans,dijkstra(S,T));</span><br><span class="line">		<span class="keyword">if</span> (ans!=inf)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;YES\n%d\n&quot;</span>,ans);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			cnt=max(cnt,solve());</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;NO\n%d\n&quot;</span>,cnt);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>五校联考</tag>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/19 下午</title>
    <url>/2020/12/21/201219/</url>
    <content><![CDATA[<p>相框/Cow Steeplechase/Plan of Lectures</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>有两个相框，相框定义为一个大矩形内部挖去一个小矩形。这两个相框不能旋转，只能平移，求它们最大相交面积。</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>最优解一定是两个相框有一个顶点重合（每个相框有八个顶点）。计算一下即可。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>咕咕咕。</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>Luogu P5428</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>Codeforces 1463E</p>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>提高模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/16 晚</title>
    <url>/2020/12/21/201216/</url>
    <content><![CDATA[<p>坐标系/图/还是图/字符串</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>平面上有两条平行的直线，一条直线上有 $n$ 个黑点，另一条直线上有 $m$ 个红点。每个黑点需要寻找一个距离它直线距离最近的一个红点匹配。如果存在有两个黑点匹配到的红点相同，且其中一个黑点距离该红点的距离更近，则另外一个黑点是不高兴的。求不高兴黑点的最小值。</p>
<p>$n,m\leq 10^5$。</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>显然可以贪心。每个黑点至多只会在两个红点中选一个。如果选中左边的点不会使当前黑点不高兴就选，否则就选右边的。容易证明这个策略是正确的。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],c[N],dis[N],ans;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!vis[y])&#123;</span><br><span class="line">		vis[y]=<span class="number">1</span>;ans++;</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dis[y]==<span class="built_in">abs</span>(a[x]-b[y]))&#123;</span><br><span class="line">		ans++;</span><br><span class="line">	&#125;</span><br><span class="line">	dis[y]=<span class="built_in">abs</span>(a[x]-b[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;a.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;a.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read(),m=read();read();read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) b[i]=read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) c[i]=lower_bound(b+<span class="number">1</span>,b+<span class="number">1</span>+m,a[i])-b<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span> (c[i]==m) calc(i,m);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c[i]==<span class="number">0</span>) calc(i,<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (a[i]-b[c[i]]&lt;b[c[i]+<span class="number">1</span>]-a[i]) calc(i,c[i]);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (a[i]-b[c[i]]&gt;b[c[i]+<span class="number">1</span>]-a[i]) calc(i,c[i]+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (!vis[c[i]] || dis[c[i]]==a[i]-b[c[i]]) calc(i,c[i]);</span><br><span class="line">			<span class="keyword">else</span> calc(i,c[i]+<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;n-ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p>给无向图黑白染色，要求对于任意两个颜色相同的点，有一条边直接相连。</p>
<p>最小化连接相同颜色点的边的数量。</p>
<p>$n\leq 700$。</p>
<h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>题目等价于：将一张无向图分解成两个团，使得它们的大小尽可能接近。</p>
<p>这就和 uva1627 相同。</p>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">710</span>;</span><br><span class="line"><span class="keyword">bool</span> f[N][N&lt;&lt;<span class="number">1</span>],g[N][N];</span><br><span class="line"><span class="keyword">int</span> d[N],col[N],n,idx;</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vec[N][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">	col[x]=c;vec[idx][c<span class="number">-1</span>].push_back(x);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> y=<span class="number">0</span>;y&lt;n;++y)&#123;</span><br><span class="line">		<span class="keyword">if</span> (x!=y &amp;&amp; !(g[x][y] &amp;&amp; g[y][x]))&#123;</span><br><span class="line">			<span class="keyword">if</span> (col[y]&gt;<span class="number">0</span> &amp;&amp; col[x]==col[y]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span> (!col[y] &amp;&amp; !dfs(y,<span class="number">3</span>-c)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line">	idx=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">		<span class="keyword">if</span> (!col[i])&#123;</span><br><span class="line">			<span class="keyword">if</span> (!dfs(i,<span class="number">1</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			d[idx]=(<span class="keyword">int</span>)vec[idx][<span class="number">0</span>].size()-(<span class="keyword">int</span>)vec[idx][<span class="number">1</span>].size();</span><br><span class="line">			idx++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">	<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; v1,v2;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=idx<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line">		<span class="keyword">bool</span> flag;</span><br><span class="line">		<span class="keyword">if</span> (f[i][sum-d[i]+n])&#123;</span><br><span class="line">			flag=<span class="number">0</span>;sum-=d[i];</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			flag=<span class="number">1</span>;sum+=d[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="keyword">int</span>)vec[i][flag].size();++j) v1.push_back(vec[i][flag][j]);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="keyword">int</span>)vec[i][!flag].size();++j) v2.push_back(vec[i][!flag][j]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> siz1=(<span class="keyword">int</span>)v1.size(),siz2=(<span class="keyword">int</span>)v2.size();</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;(siz1<span class="number">-1</span>)*siz1/<span class="number">2</span>+(siz2<span class="number">-1</span>)*siz2/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;b.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;b.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	n=read();<span class="keyword">int</span> m=read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read()<span class="number">-1</span>,y=read()<span class="number">-1</span>;</span><br><span class="line">		g[x][y]=g[y][x]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (n==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (!build()) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		f[<span class="number">0</span>][n]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j=-n;j&lt;=n;++j)&#123;</span><br><span class="line">				<span class="keyword">if</span> (f[i][j+n])&#123;</span><br><span class="line">					f[i+<span class="number">1</span>][j+d[i]+n]=f[i+<span class="number">1</span>][j-d[i]+n]=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)&#123;</span><br><span class="line">			<span class="keyword">if</span> (f[idx][i+n])&#123;</span><br><span class="line">				print(i);<span class="keyword">break</span>;</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span> (f[idx][n-i])&#123;</span><br><span class="line">				print(-i);<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>有一张无向图，每条边有两个值 $s_i$ 和 $g_i$。你有若干个银子和若干个金子，当且仅当银子数大于等于 $s_i$，金子数大于等于 $g_i$ 时，第 $i$ 条边可用（否则这条边消失）。每个银子 $S$ 代价，每个金子 $G$ 代价。问至少需要付出多少代价才能让图连通。</p>
<p>$n\leq 200,m\leq 50000$。</p>
<h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>如果确定了金子的值，则银子的值就是原图删去那些金子不足的边之后，剩下的图的最小生成树的最大银子边权。</p>
<p>故从小到大枚举金子数等于哪条边的需求，相当于每次往图中加一条边，求它的最小生成树。</p>
<p>lct 或者暴力找环均能维护。</p>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LL long long</span></span><br><span class="line"><span class="keyword">const</span> LL inf=<span class="number">0x3f3f3f3f3f3f3f3f</span>LL;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson(x) son[x][0]</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson(x) son[x][1]</span></span><br><span class="line"><span class="keyword">int</span> f[N],fa[N],son[N][<span class="number">2</span>],maxx[N],stk[N],val[N];</span><br><span class="line"><span class="keyword">bool</span> rev[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,x,y;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Edge &amp;a) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x&lt;a.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;E[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rson(fa[x])==x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lson(fa[x])!=x &amp;&amp; rson(fa[x])!=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    rev[x]^=<span class="number">1</span>;swap(lson(x),rson(x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    maxx[x]=x;</span><br><span class="line">    <span class="keyword">if</span> (lson(x) &amp;&amp; val[maxx[lson(x)]]&gt;val[maxx[x]]) maxx[x]=maxx[lson(x)];</span><br><span class="line">    <span class="keyword">if</span> (rson(x) &amp;&amp; val[maxx[rson(x)]]&gt;val[maxx[x]]) maxx[x]=maxx[rson(x)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rev[x]) reverse(lson(x)),reverse(rson(x)),rev[x]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y=fa[x],z=fa[y],k=get(x);</span><br><span class="line">    !isroot(y) &amp;&amp; (son[z][get(y)]=x),fa[x]=z;</span><br><span class="line">    son[y][k]=son[x][!k],fa[son[x][!k]]=y;</span><br><span class="line">    son[x][!k]=y,fa[y]=x;</span><br><span class="line">    pushup(y);pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u=x,tp=<span class="number">0</span>;stk[++tp]=u;</span><br><span class="line">    <span class="keyword">while</span> (!isroot(u)) stk[++tp]=u=fa[u];</span><br><span class="line">    <span class="keyword">while</span> (tp) pushdown(stk[tp--]);</span><br><span class="line">    <span class="keyword">while</span> (!isroot(x))&#123;</span><br><span class="line">        <span class="keyword">int</span> y=fa[x];</span><br><span class="line">        <span class="keyword">if</span> (!isroot(y)) rotate(get(x)==get(y)?y:x);</span><br><span class="line">        rotate(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> y=<span class="number">0</span>;x;x=fa[y=x]) splay(x),rson(x)=y,pushup(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    access(x),splay(x),reverse(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    makeroot(x),access(y),splay(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    makeroot(x),fa[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    split(x,y),fa[x]=lson(y)=<span class="number">0</span>,pushup(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==x?x:f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">multiset</span> &lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;c.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;c.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read(),m=read(),G=read(),S=read();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">    	E[i].u=read();E[i].v=read();E[i].x=read();E[i].y=read();</span><br><span class="line">    &#125;</span><br><span class="line">	sort(E+<span class="number">1</span>,E+<span class="number">1</span>+m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) val[i+n]=E[i].y;</span><br><span class="line">    LL ans=inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> u=E[i].u,v=E[i].v;</span><br><span class="line">        <span class="keyword">if</span> (u==v) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (find(u)==find(v))&#123;</span><br><span class="line">            split(u,v);</span><br><span class="line">            <span class="keyword">int</span> j=maxx[v]-n;</span><br><span class="line">            <span class="keyword">if</span> (E[j].y&lt;=E[i].y) <span class="keyword">continue</span>;</span><br><span class="line">            s.erase(s.find(E[j].y));</span><br><span class="line">			s.insert(E[i].y);</span><br><span class="line">            cut(E[j].u,j+n);cut(E[j].v,j+n);</span><br><span class="line">            link(u,i+n);link(v,i+n);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            f[find(u)]=find(v);</span><br><span class="line">            s.insert(E[i].y);</span><br><span class="line">            link(u,i+n);link(v,i+n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">int</span>)s.size()==n<span class="number">-1</span>)&#123;</span><br><span class="line">            ans=min(ans,<span class="number">1L</span>L*E[i].x*G+<span class="number">1L</span>L*(*s.rbegin())*S);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans==inf?<span class="number">-1</span>:ans);</span><br><span class="line">    fclose(<span class="built_in">stdin</span>);</span><br><span class="line">    fclose(<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>咕咕咕。</p>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>提高模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>20/12/13 五校联考</title>
    <url>/2020/12/13/201213/</url>
    <content><![CDATA[<p>ehzeux 与球/ehzeux 与圆周/ehzeux 与宠物猪</p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>原题：arc073c</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>分类讨论。</p>
<p>钦定把最大的球染成红色。分类讨论。</p>
<p>不妨设 $x_i\leq y_i$。</p>
<p>如果最小的球也是红色，则 $r_{max}-r_{min}$ 就确定了。将所有的盒子按照 $x$ 从小到大排序，显然最优解一定是取一开始的一段取 $y$ 涂蓝 ，剩下的取 $x$ 涂蓝。</p>
<p>如果最小的球是蓝色，那么显然必定是将所有的 $y$ 涂成红色，所有的 $x$ 涂成蓝色。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pt</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pt a,pt b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.x&lt;b.x; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> maxp[N],minp[N];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;ball.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;ball.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read(),minx=inf,miny=inf,maxx=<span class="number">0</span>,maxy=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		a[i].x=read();a[i].y=read();</span><br><span class="line">		<span class="keyword">if</span> (a[i].x&gt;a[i].y) swap(a[i].x,a[i].y);</span><br><span class="line">		minx=min(minx,a[i].x);</span><br><span class="line">		miny=min(miny,a[i].y);</span><br><span class="line">		maxx=max(maxx,a[i].x);</span><br><span class="line">		maxy=max(maxy,a[i].y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=(maxx-minx)*(maxy-miny);</span><br><span class="line">	sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">	miny=a[<span class="number">1</span>].x;maxp[<span class="number">0</span>]=<span class="number">0</span>;minp[<span class="number">0</span>]=inf;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		maxp[i]=max(maxp[i<span class="number">-1</span>],a[i].y);</span><br><span class="line">		minp[i]=min(minp[i<span class="number">-1</span>],a[i].y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> res=inf;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=n;i&gt;=<span class="number">2</span>;--i)&#123;</span><br><span class="line">		res=min(res,max(maxp[i<span class="number">-1</span>],a[n].x)-min(minp[i],a[i].x));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;min(ans,(maxy-miny)*res)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p>原题：agc028d</p>
<h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>不会。咕咕咕。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">int</span> g[N],f[N][N],p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x+y&gt;=mod?x+y-mod:x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x-y&lt;<span class="number">0</span>?x-y+mod:x-y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1L</span>L*x*y%mod; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;circle.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;circle.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read()&lt;&lt;<span class="number">1</span>,m=read(),ans=<span class="number">0</span>;</span><br><span class="line">	g[<span class="number">0</span>]=<span class="number">1</span>;<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i+=<span class="number">2</span>) g[i]=mul(g[i<span class="number">-2</span>],i<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read();p[x]=y;p[y]=x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j+=<span class="number">2</span>)&#123;</span><br><span class="line">			<span class="keyword">int</span> flag=<span class="number">1</span>,cnt=j-i+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=i;k&lt;=j;++k)&#123;</span><br><span class="line">				<span class="keyword">if</span> (p[k])&#123;</span><br><span class="line">					cnt--;</span><br><span class="line">					<span class="keyword">if</span> (p[k]&lt;i || p[k]&gt;j) flag=<span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (!flag) <span class="keyword">continue</span>;</span><br><span class="line">			f[i][j]=g[cnt];<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k=j;k&gt;i;--k)&#123;</span><br><span class="line">				sum+=!p[k];f[i][j]=sub(f[i][j],mul(f[i][k<span class="number">-1</span>],g[sum]));</span><br><span class="line">			&#125;</span><br><span class="line">			ans=add(ans,mul(f[i][j],g[n<span class="number">-2</span>*m-cnt]));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>原题：agc034d</p>
<h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>把曼哈顿距离的绝对值拆了。</p>
<p>发现一个匹配的贡献就是：</p>
<script type="math/tex; mode=display">
\max(x_1+y_1-x_2-y_2,x_1-y_1-x_2+y_2,-x_1+y_1+x_2-y_2,-x_1-y_1+x_2+y_2)</script><p>搞四个中转点。</p>
<p>原点向所有的白猪连边，流量 $z_i$ 费用 $0$。</p>
<p>每个白猪向四个中转点连边，流量 $z_i$ 费用 $\pm x_i\pm y_i$。</p>
<p>四个中转点向每个黑猪连边，流量 $z_i$ 费用 $-(\pm x_i\pm y_i)$。</p>
<p>所有的黑猪向汇点连边，流量 $z_i$ 费用 $0$。</p>
<p>最大费用最大流。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">40010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f3f3f3f3f</span>LL;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch==<span class="string">&#x27;-&#x27;</span>) f=-f;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">		x=x*<span class="number">10</span>+ch<span class="number">-48</span>;</span><br><span class="line">		ch=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> etot=<span class="number">1</span>,ea[N&lt;&lt;<span class="number">2</span>],eb[N&lt;&lt;<span class="number">2</span>],ec[N],ed[N&lt;&lt;<span class="number">2</span>],ef[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pointList</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">apply</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ++cnt;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;pt;</span><br><span class="line"><span class="keyword">int</span> ans,dis[N],S,T,maxflow,a[N],b[N],c[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">	<span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">	dis[S]=<span class="number">0</span>;vis[S]=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; q;q.push(S);</span><br><span class="line">	<span class="keyword">while</span> (!q.empty())&#123;</span><br><span class="line">		<span class="keyword">int</span> x=q.front();q.pop();</span><br><span class="line">		vis[x]=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">			<span class="keyword">int</span> y=ea[i];</span><br><span class="line">			<span class="keyword">if</span> (dis[y]&gt;dis[x]+ed[i] &amp;&amp; ef[i])&#123;</span><br><span class="line">				dis[y]=dis[x]+ed[i];</span><br><span class="line">				<span class="keyword">if</span> (!vis[y])&#123;</span><br><span class="line">					q.push(y);vis[y]=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dis[T]!=inf; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (x==T)&#123;</span><br><span class="line">		vis[T]=<span class="number">1</span>;maxflow+=flow;</span><br><span class="line">		<span class="keyword">return</span> flow;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> used=<span class="number">0</span>;</span><br><span class="line">	vis[x]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=ec[x];i;i=eb[i])&#123;</span><br><span class="line">		<span class="keyword">int</span> y=ea[i];</span><br><span class="line">		<span class="keyword">if</span> ((!vis[y] || y==T) &amp;&amp; ef[i] &amp;&amp; dis[y]==dis[x]+ed[i])&#123;</span><br><span class="line">			<span class="keyword">int</span> delta=dfs(y,min(flow-used,ef[i]));</span><br><span class="line">			<span class="keyword">if</span> (delta!=<span class="number">0</span>)&#123;</span><br><span class="line">				ans+=ed[i]*delta;ef[i]-=delta;ef[i^<span class="number">1</span>]+=delta;used+=delta;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (used==flow) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> used;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mcmf</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (spfa())&#123;</span><br><span class="line">		vis[T]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span> (vis[T])&#123;</span><br><span class="line">			<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">			dfs(S,inf);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> f,<span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">	etot++;ea[etot]=y;eb[etot]=ec[x];ec[x]=etot;ed[etot]=z;ef[etot]=f;</span><br><span class="line">	etot++;ea[etot]=x;eb[etot]=ec[y];ec[y]=etot;ed[etot]=-z;ef[etot]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">&quot;pig.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	freopen(<span class="string">&quot;pig.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">int</span> n=read();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=pt.apply();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) b[i]=pt.apply();</span><br><span class="line">	S=pt.apply();T=pt.apply();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i) c[i]=pt.apply();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read(),z=read();</span><br><span class="line">		addEdge(S,a[i],z,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k) addEdge(a[i],c[k],z,dx[k]*x+dy[k]*y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read(),z=read();</span><br><span class="line">		addEdge(b[i],T,z,<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k) addEdge(c[k],b[i],z,-dx[k]*x-dy[k]*y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;-mcmf()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	fclose(<span class="built_in">stdin</span>);</span><br><span class="line">	fclose(<span class="built_in">stdout</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>OI</category>
      </categories>
      <tags>
        <tag>五校联考</tag>
        <tag>省选模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>项目汇集</title>
    <url>/2020/12/13/items/</url>
    <content><![CDATA[<p>小型项目/控制台项目汇集</p>
<a id="more"></a>
<p><b><font color=red>这些项目均已无限期停止更新。</font></b></p>
<p><strong>如果需要源代码进行研究（甚至帮助更新），请通过邮箱 realZombie462@gmail.com 联系作者。</strong></p>
<ul>
<li><p>TowerDefence</p>
<p>使用 vc6.0 和 easyx 库编写的简单塔防游戏。</p>
<font color=green>该项目已经完成。</font>

<p>最新版本 <a href="https://zombie462.github.io/items/towerdefence.zip">点击下载</a></p>
</li>
<li><p>Minecraft 2d (c++ game)</p>
<p>使用 vc6.0 和 easyx 库编写的简单平面沙盒游戏。</p>
<p>最新版本 <a href="https://zombie462.github.io/items/minecraft2d.zip">点击下载</a></p>
</li>
<li><p>Plant revenge 系列</p>
<p>使用 pascal 编写的简单控制台游戏。（早年作品）</p>
<p>同时有 c++ 重写后的版本。（只是开了个头）</p>
<p>最新版本 <a href="https://zombie462.github.io/items/pr2.zip">点击下载</a></p>
<p>额外版本 <a href="https://zombie462.github.io/items/pr3.zip">点击下载</a></p>
</li>
<li><p>魔塔 50 层（c++ game）</p>
<p>使用 c++ 编写的简单控制台游戏（更新进度 15/50 层）。 </p>
<p>最新版本 <a href="https://zombie462.github.io/items/mota50.zip">点击下载</a></p>
</li>
<li><p>烈焰编辑器</p>
<p>使用 vb 编写的没啥用的一个神奇语言的代码编辑器。（早年作品）</p>
<p>编译系统由 pascal 完成。</p>
<p>最新版本 <a href="https://zombie462.github.io/items/flame_editor.zip">点击下载</a></p>
</li>
<li><p>一些更为差劲的项目</p>
<ul>
<li><p>SpecialGame</p>
<p>一个塔防游戏的雏形。</p>
<p>使用 vc6.0 和 easyx 编写。</p>
<p>最新版本 <a href="https://zombie462.github.io/items/specialgame.zip">点击下载</a></p>
</li>
<li><p>Adventure 系列</p>
<p>灰都不剩的渣作。</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>PVZ (c++ game)</title>
    <url>/2020/12/13/pvz/</url>
    <content><![CDATA[<p>PVZ (c++ game) - 最新版本 v1.0.4</p>
<a id="more"></a>
<p><b><font color=red>本项目已无限期停止更新。</font></b></p>
<p>PVZ (c++ game) 是一款使用 vc6.0 编写、采用 easyx 图形库的植物大战僵尸游戏。</p>
<p>具体信息详见各个版本目录下的 <code>readme.md</code> 文件。</p>
<p>下载地址：</p>
<p>v1.0.4 <a href="https://zombie462.github.io/PVZ v1.0.4.zip">点击下载</a></p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>Zjudge</title>
    <url>/2020/12/12/zjudge/</url>
    <content><![CDATA[<p>Zjudge - 最新版本 v1.3.0</p>
<a id="more"></a>
<p><b><font color=red>本项目已无限期停止更新。</font></b></p>
<p>Zjudge 是一款基于控制台的程序评测系统。</p>
<p>具体信息详见各个版本目录下的 <code>readme.txt</code> 文件。</p>
<p><strong>注意：旧版本将不会得到维护。</strong></p>
<p>下载地址：</p>
<p>v1.1.0 <a href="https://zombie462.github.io/items/Zjudge v1.1.0.zip">点击下载</a></p>
<p>v1.1.1 <a href="https://zombie462.github.io/items/Zjudge v1.1.1.zip">点击下载</a></p>
<p>v1.1.2 <a href="https://zombie462.github.io/items/Zjudge v1.1.2.zip">点击下载</a></p>
<p>v1.2.0 <a href="https://zombie462.github.io/items/Zjudge v1.2.0.zip">点击下载</a></p>
<p>v1.3.0 <a href="https://zombie462.github.io/items/Zjudge v1.3.0.zip">点击下载</a></p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐列表</title>
    <url>/2020/12/12/music_list/</url>
    <content><![CDATA[<p>神的随波逐流（yousa）</p>
<audio controls>
  <source src="https://cdn.jsdelivr.net/gh/zombie462/zombie462.github.io/items/music1.mp3" type="audio/mp3">
</audio>
]]></content>
      <categories>
        <category>音频</category>
      </categories>
      <tags>
        <tag>音频</tag>
      </tags>
  </entry>
  <entry>
    <title>薄的随波逐流</title>
    <url>/2020/12/12/bo_de_sui_bo_zhu_liu/</url>
    <content><![CDATA[<p>薄的随波逐流.mp4</p>
<a id="more"></a>
<video controls="" autoplay="" name="media"><source src="https://zombie462.github.io/items/video_2.mp4" type="video/mp4"></video>]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>秦城欢迎你</title>
    <url>/2020/12/12/qin_cheng_huan_ying_ni/</url>
    <content><![CDATA[<p>秦城欢迎你.mp4</p>
<a id="more"></a>
<video controls="" autoplay="" name="media"><source src="https://zombie462.github.io/items/video_1.mp4" type="video/mp4"></video>]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
</search>
